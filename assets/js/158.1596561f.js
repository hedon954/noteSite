(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{571:function(t,s,a){"use strict";a.r(s);var e=a(47),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[t._v("#")]),t._v(" Pod")]),t._v(" "),a("blockquote",[a("p",[a("em",[t._v("Pod")]),t._v(" 是可以在 Kubernetes 中创建和管理的、最小的可部署的计算单元。")])]),t._v(" "),a("h2",{attrs:{id:"一、pod-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、pod-简介"}},[t._v("#")]),t._v(" 一、Pod 简介")]),t._v(" "),a("h3",{attrs:{id:"_1-pod-结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-pod-结构"}},[t._v("#")]),t._v(" 1. Pod 结构")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs5tq1ha13j30q80iy42g.jpg",alt:"image-20210705093808217"}}),t._v(" "),a("p",[t._v("每个Pod中都包含一个或者多个容器，这些容器可以分为两类：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用户程序所在的容器，数量可多可少")])]),t._v(" "),a("li",[a("p",[t._v("Pause 容器，这是每个 Pod 都会有的一个根容器，它的作用有两个：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("可以以它为依据，评估整个 Pod 的健康状况。")])]),t._v(" "),a("li",[a("p",[t._v("可以在根容器上设置 IP 地址，其它容器都共享此 IP（Pod 的 IP），以实现Pod内部的网络通信")]),t._v(" "),a("blockquote",[a("p",[t._v("这里是 "),a("strong",[t._v("Pod 内部")]),t._v("的通讯。")]),t._v(" "),a("p",[a("strong",[t._v("Pod 之间")]),t._v("的通讯采用"),a("strong",[t._v("虚拟二层网络技术")]),t._v("来实现，我们当前环境使用的是 "),a("strong",[t._v("Flannel")]),t._v("。")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-pod-模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pod-模板"}},[t._v("#")]),t._v(" 2. Pod 模板")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，版本号，例如v1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod       　 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，资源类型，例如 Pod")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，元数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod名称")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Pod所属的命名空间,默认为"default"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自定义标签列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　          \n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器的详细定义")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器列表")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器的镜像名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Always"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("Never"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("IfNotPresent "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取镜像的策略 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令参数列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workingDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的工作目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#挂载到容器内部的存储卷配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储卷在容器内mount的绝对路径，应少于512字符")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否为只读模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#需要暴露的端口库号列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口的名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器需要监听的端口号")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器所在主机需要监听的端口号，默认与Container相同")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口协议，支持TCP和UDP，默认TCP")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器运行前需设置的环境变量列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量的值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制和请求的设置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制的设置")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源请求的设置")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu请求，容器启动的初始可用数量")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存请求,容器启动的初始可用数量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#生命周期钩子")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动后立即执行此钩子,如果执行失败,会根据重启策略进行重启")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器终止前执行此钩子,无论结果如何,容器都会终止")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内各容器健康检查的设置，当探测无响应几次后将自动重启该容器")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod容器内检查方式设置为exec方式")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#exec方式需要制定的命令或脚本")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("HttpHeaders")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方式设置为tcpSocket方式")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动完成后首次探测的时间，单位为秒")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0    　　    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0     　　    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("successThreshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureThreshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Always "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" OnFailure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod的重启策略")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeName表示将该Pod调度到指定到名称的node节点上")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obeject "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeSelector表示将该Pod调度到包含这个label的node上")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pull镜像时使用的secret名称，以key：secretkey格式指定")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostNetwork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在该pod上定义共享存储卷列表")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享存储卷名称 （volumes类型有很多种）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　　        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod所在宿主机的目录，将被用于同期中mount的目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　　"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为secret的存储卷，挂载集群与定义的secret对象到容器内部")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scretname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  \n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n")])])]),a("p",[a("strong",[t._v("❓记不住怎么办？")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看某种资源可以配置的一级配置")]),t._v("\nkubectl explain 资源类型 \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看属性的子属性")]),t._v("\nkubectl explain 资源类型.属性\n")])])]),a("p",[t._v("示例：查看资源类型为 pod 的可配置项")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod")]),t._v("\nKIND:     Pod\nVERSION:  v1\n\nDESCRIPTION:\n     Pod is a collection of containers that can run on a host. This resource is\n     created by clients and scheduled onto hosts.\n\nFIELDS:\n   apiVersion\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   kind\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   metadata\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   spec\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   status\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("Kubernetes 中基本所有资源的一级属性都是一样的，主要包含 5 个部分：")]),t._v(" "),a("ul",[a("li",[t._v("apiVersion  <string>：版本，由 Kubernetes 内部定义，版本号必须用 "),a("code",[t._v("kubectl api-versions")]),t._v(" 查询。")]),t._v(" "),a("li",[t._v("kind <string>：资源类型，由 Kubernetes 内部定义，类型必须用 "),a("code",[t._v("kubectl api-resources")]),t._v(" 查询。")]),t._v(" "),a("li",[t._v("metadata  <Object>：元数据，主要是资源标识和说明，常用的有 name、namespace、labels 等。")]),t._v(" "),a("li",[t._v("spec <Object>：描述，这是配置中最重要的一部分，里面是对各种资源配置的详细描述。")]),t._v(" "),a("li",[t._v("status <Object>：状态信息，里面的内容不需要定义，由 Kubernetes 自动生成。")])]),t._v(" "),a("p",[t._v("在上面的属性中，"),a("strong",[t._v("spec")]),t._v(" 是接下来研究的重点，继续看下它的常见子属性：")]),t._v(" "),a("ul",[a("li",[t._v("containers <[]Object>：容器列表，用于定义容器的详细信息。")]),t._v(" "),a("li",[t._v("nodeName <String>：根据 nodeName 的值将 Pod 调度到指定的 Node 节点上。")]),t._v(" "),a("li",[t._v("nodeSelector <map[]> ：根据 NodeSelector 中定义的信息选择该 Pod 调度到包含这些 Label 的 Node 上。")]),t._v(" "),a("li",[t._v("hostNetwork  <boolean>：是否使用"),a("strong",[t._v("主机网络模式")]),t._v("，默认为 false，如果设置为 true，表示使用宿主机网络。")]),t._v(" "),a("li",[t._v("volumes  <[]Object> ：存储卷，用于定义 Pod 上面挂载的存储信息。")]),t._v(" "),a("li",[t._v("restartPolicy <string>：重启策略，表示 Pod 在遇到故障的时候的处理策略。")])]),t._v(" "),a("h2",{attrs:{id:"二、查看-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、查看-pod"}},[t._v("#")]),t._v(" 二、查看 Pod")]),t._v(" "),a("h3",{attrs:{id:"_1-查看所有-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看所有-pod"}},[t._v("#")]),t._v(" 1. 查看所有 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get pods\n")])])]),a("h3",{attrs:{id:"_2-查看指定的-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-查看指定的-pod"}},[t._v("#")]),t._v(" 2. 查看指定的 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get pods podName\n")])])]),a("h3",{attrs:{id:"_3-查看指定-namespace-的-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-查看指定-namespace-的-pod"}},[t._v("#")]),t._v(" 3. 查看指定 namespace 的 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get pods -n ns名称\n")])])]),a("h3",{attrs:{id:"_4-查看-pod-详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看-pod-详细信息"}},[t._v("#")]),t._v(" 4. 查看 Pod 详细信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl describe pods "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("podName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-n ns名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"三、运行-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、运行-pod"}},[t._v("#")]),t._v(" 三、运行 Pod")]),t._v(" "),a("p",[t._v("Kubernetes 没有提供单独运行 Pod 的命令，都是通过 Pod 的控制器来实现的。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pod控制层名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("参数：")]),t._v(" "),a("ul",[a("li",[t._v("--image：指定 Pod 的镜像")]),t._v(" "),a("li",[t._v("--port：指定端口")]),t._v(" "),a("li",[t._v("--namespace：指定 namespace")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run nginx --image=nginx:1.17.1 --port=80 --namespace=dev")]),t._v("\npod/nginx created\n")])])]),a("h2",{attrs:{id:"四、访问-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、访问-pod"}},[t._v("#")]),t._v(" 四、访问 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("获取 Pod 的 IP")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME    READY   STATUS    RESTARTS   AGE   IP           NODE        NOMINATED NODE   READINESS GATES\nnginx   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          81s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.3   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("访问 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.3:80\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"五、创建-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、创建-pod"}},[t._v("#")]),t._v(" 五、创建 Pod")]),t._v(" "),a("p",[t._v("前面「"),a("strong",[t._v("运行 Pod")]),t._v("」 的时候就是创建 Pod 的一种方式。")]),t._v(" "),a("p",[t._v("另外一种是通过"),a("strong",[t._v("配置文件")]),t._v("来创建的：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f 配置文件路径\n")])])]),a("h2",{attrs:{id:"六、删除-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、删除-pod"}},[t._v("#")]),t._v(" 六、删除 Pod")]),t._v(" "),a("h3",{attrs:{id:"_1-通过命令行删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-通过命令行删除"}},[t._v("#")]),t._v(" 1. 通过命令行删除")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl delete pod "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pod名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-n 命名空间"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("删除 Pod，可以直接删除 Pod，也可以直接删除 Pod 对应的控制器。")])]),t._v(" "),a("h3",{attrs:{id:"_2-通过配置文件删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-通过配置文件删除"}},[t._v("#")]),t._v(" 2. 通过配置文件删除")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl delete pod -f 配置文件路径\n")])])]),a("h2",{attrs:{id:"七、pod-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、pod-配置"}},[t._v("#")]),t._v(" 七、Pod 配置")]),t._v(" "),a("blockquote",[a("p",[t._v("本小节主要来研究 "),a("strong",[t._v("pod.spec.containers")]),t._v(" 属性，这也是 Pod 配置中最为关键的一项配置。")])]),t._v(" "),a("h3",{attrs:{id:"_1-查看配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看配置项"}},[t._v("#")]),t._v(" 1. 查看配置项")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.spec.containers")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面只展现出重要属性")]),t._v("\nKIND:     Pod\nVERSION:  v1\nRESOURCE: containers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组，代表可以有多个容器 FIELDS:")]),t._v("\n  - name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n    image "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n    imagePullPolicy  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 镜像拉取策略 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n    args   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器的启动命令需要的参数列表 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器环境变量的配置")]),t._v("\n    ports  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要暴露的端口号列表")]),t._v("\n    resources "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源限制和资源请求的设置")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-基本配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本配置"}},[t._v("#")]),t._v(" 2. 基本配置")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建一个 "),a("code",[t._v("pod-base.yaml")]),t._v(" 文件，内容如下")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器名称")]),t._v("\n\t  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#镜像名称")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n")])])]),a("p",[t._v("上面定义了一个比较简单的 Pod 的配置，里面有两个容器：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("nginx：用的是 1.17.1 版本的 nginx 镜像创建（nginx 是一个轻量级的 web 容器）。")])]),t._v(" "),a("li",[a("p",[t._v("busybox：用的是 1.30 版本的 busybo 镜像创建（busybox 是一个小巧的 linux 命令集合）。")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-base.yaml ")]),t._v("\npod/pod-base created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 状况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-base")]),t._v("\nNAME       READY   STATUS             RESTARTS   AGE\npod-base   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/2     CrashLoopBackOff   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("          77s\n")])])]),a("p",[t._v("我们会发现它已经起来了，但是有问题。")])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 详情")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod pod-base")]),t._v("\nEvents:\n  Type     Reason     Age              From                Message\n  ----     ------     ----             ----                -------\n  Normal   Scheduled  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        default-scheduler   Successfully assigned default/pod-base to k8s-node1\n  Normal   Pulled     86s              kubelet, k8s-node1  Container image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx:1.17.1"')]),t._v(" already present on machine\n  Normal   Created    86s              kubelet, k8s-node1  Created container nginx\n  Normal   Started    85s              kubelet, k8s-node1  Started container nginx\n  Normal   Pulling    85s              kubelet, k8s-node1  Pulling image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"busybox:1.30"')]),t._v("\n  Normal   Pulled     9s               kubelet, k8s-node1  Successfully pulled image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"busybox:1.30"')]),t._v("\n  Normal   Created    8s "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2 over 9s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, k8s-node1  Created container busybox\n  Normal   Started    8s "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2 over 9s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, k8s-node1  Started container busybox\n  Normal   Pulled     8s               kubelet, k8s-node1  Container image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"busybox:1.30"')]),t._v(" already present on machine\n  Warning  BackOff    6s "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2 over 7s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, k8s-node1  Back-off restarting failed container\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-镜像拉取策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-镜像拉取策略"}},[t._v("#")]),t._v(" 3. 镜像拉取策略")]),t._v(" "),a("blockquote",[a("p",[t._v("imagePullPolicy：用于设置镜像拉取的策略。")])]),t._v(" "),a("p",[t._v("k8s 支持配置三种拉取策略：")]),t._v(" "),a("ul",[a("li",[t._v("Always：总是从远程仓库拉取镜像")]),t._v(" "),a("li",[t._v("IfNotPresent：本地有则使用本地镜像，本地没有则从远程仓库拉取镜像")]),t._v(" "),a("li",[t._v("Never：只使用本地镜像，从不去远程仓库拉取，本地没有就报错")])]),t._v(" "),a("blockquote",[a("p",[t._v("默认值说明：")]),t._v(" "),a("ul",[a("li",[t._v("如果镜像 tag 为具体的版本号，默认策略是 IfNotPresent")]),t._v(" "),a("li",[t._v("如果镜像 tag 为 latest（最终版本），默认策略是 Always")])])]),t._v(" "),a("h3",{attrs:{id:"_4-启动命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-启动命令"}},[t._v("#")]),t._v(" 4. 启动命令")]),t._v(" "),a("blockquote",[a("p",[t._v("command：用于在Pod中的容器初始化完毕之后执行一个命令。")])]),t._v(" "),a("p",[t._v("在前面的案例中，一直有一个问题没有解决，就是 busybox 容器一直没有成功运行，那么到底是什么原因导致这个容器的故障的呢？")]),t._v(" "),a("ul",[a("li",[t._v("原来 busybox 并不是一个程序，而是类似于一个工具类的集合，k8s 集群启动管理后，它会自动关闭。解决方法就是让其一直在运行，这就用到了 command 的配置。")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("command\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置镜像拉取策略")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touch /tmp/hello.txt;while true;do /bin/echo $(date +%T) >> /tmp/hello.txt;sleep 3;done;"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ul",[a("li",[t._v('"/bin/sh","-c"：使用 sh 执行命令。')]),t._v(" "),a("li",[t._v("touch /tmp/hello.txt：创建一个 "),a("code",[t._v("/tmp/hello.txt")]),t._v(" 的文件。")]),t._v(" "),a("li",[t._v("while true;do /bin/echo $(date +%T) >> /tmp/hello.txt;sleep 3;done：每隔 3 秒，向文件写入当前时间")])]),t._v(" "),a("blockquote",[a("p",[t._v("特别说明：通过上面发现 command 已经可以完成启动命令和传递参数的功能，为什么还要提供一个 args 选项，用于传递参数？")]),t._v(" "),a("p",[t._v("其实和 Docker 有点关系，k8s 中的 "),a("strong",[t._v("command")]),t._v(" 和 "),a("strong",[t._v("args")]),t._v(" 两个参数其实是为了实现覆盖 "),a("strong",[t._v("Dockerfile")]),t._v(" 中的 "),a("strong",[t._v("ENTRYPOINT")]),t._v(" 的功能：")]),t._v(" "),a("ul",[a("li",[t._v("如果 command 和 args 均没有写，那么用 Dockerfile 的配置。")]),t._v(" "),a("li",[t._v("如果 command 写了，但是 args 没有写，那么 Dockerfile 默认的配置会被忽略，执行注入的 command。")]),t._v(" "),a("li",[t._v("如果 command 没有写，但是 args 写了，那么 Dockerfile 中配置的 ENTRYPOINT 命令会被执行，使用当前 args 的参数。")]),t._v(" "),a("li",[t._v("如果 command 和 args 都写了，那么 Dockerfile 中的配置会被忽略，执行 command 并追加上 args 参数。")])]),t._v(" "),a("p",[t._v("一句话：command 和 args 优先于 Dockerfile。")])]),t._v(" "),a("h3",{attrs:{id:"_5-环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-环境变量"}},[t._v("#")]),t._v(" 5. 环境变量")]),t._v(" "),a("blockquote",[a("p",[t._v("env：环境变量，用于在 Pod 中的容器设置环境变量。")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("env\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touch /tmp/hello.txt;while true;do /bin/echo $(date +%T) >> /tmp/hello.txt;sleep 3;done;"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v("\n")])])]),a("p",[t._v("进入容器查看环境变量：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec pod-env -c busybox -it /bin/sh")]),t._v("\nkubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" is DEPRECATED and will be removed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" a future version. Use kubectl kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -- "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" instead.\n/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo $username")]),t._v("\nadmin\n/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo $password")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exit")]),t._v("\n")])])]),a("p",[t._v("语法：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" pod名称 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-n 命名空间"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -c 容器名称 -it /bin/sh\n")])])]),a("ul",[a("li",[t._v("exec：执行命令")]),t._v(" "),a("li",[t._v("-n：指定命名空间，默认为 default")]),t._v(" "),a("li",[t._v("-c：指定容器名称")]),t._v(" "),a("li",[t._v("-it：前台交互运行")]),t._v(" "),a("li",[t._v("/bin/sh：进入容器后要执行的命令")])]),t._v(" "),a("h3",{attrs:{id:"_6-端口设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-端口设置"}},[t._v("#")]),t._v(" 6. 端口设置")]),t._v(" "),a("blockquote",[a("p",[t._v("ports：配置容器的端口信息。")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.spec.containers.ports")]),t._v("\nFIELDS:\n  name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口名称，如果指定，必须保证 name 在 pod 中是唯一的")]),t._v("\n  containerPort "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器要监听的端口(0<x<65536)")]),t._v("\n  hostPort "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器要在主机上公开的端口，如果设置，主机上只能运行容器的一个副本(一般省略）")]),t._v("\n  hostIP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要将外部端口绑定到的主机IP(一般省略)")]),t._v("\n  protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口协议。必须是UDP、TCP或SCTP。默认为“TCP”")]),t._v("\n")])])]),a("ul",[a("li",[t._v("访问Pod中的容器中的程序使用的是 "),a("strong",[t._v("PodIp:containerPort")])])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs5vmr7dj5j30mc0dkae5.jpg",alt:"image-20210705104412416"}}),t._v(" "),a("h3",{attrs:{id:"_7-资源配额"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-资源配额"}},[t._v("#")]),t._v(" 7. 资源配额")]),t._v(" "),a("p",[t._v("容器中的程序要运行，肯定会占用一定的资源，比如 CPU 和内存等，如果不对某个容器的资源做限制，那么它就可能吃掉大量的资源，导致其他的容器无法运行。针对这种情况，k8s 提供了对内存和 CPU 的资源进行配额的机制，这种机制主要通过 "),a("strong",[t._v("resources")]),t._v(" 选项实现，它有两个子选项：")]),t._v(" "),a("ul",[a("li",[t._v("limits：用于限制运行的容器的最大占用资源，当容器占用资源超过 limits 时会被终止，并进行重启。")]),t._v(" "),a("li",[t._v("requests：用于设置容器需要的最小资源，如果环境资源不够，容器将无法启动。")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("resoures\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置镜像拉取策略")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口设置")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口名称，如果执行，必须保证name在Pod中是唯一的")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器要监听的端口 （0~65536）")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口协议")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源配额")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制资源的上限")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制资源的下限")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数 ")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制")]),t._v("\n")])])]),a("ul",[a("li",[t._v("cpu：core 数，可以为整数或小数")]),t._v(" "),a("li",[t._v("memory：内存大小，可以使用 Gi、Mi、G、M 等形式")])]),t._v(" "),a("h2",{attrs:{id:"八、pod-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、pod-生命周期"}},[t._v("#")]),t._v(" 八、Pod 生命周期")]),t._v(" "),a("p",[t._v("我们一般将 Pod 对象"),a("strong",[t._v("从创建到终止")]),t._v("的这段时间范围称为 Pod 的生命周期，它主要包含下面的过程：")]),t._v(" "),a("ol",[a("li",[t._v("Pod 创建过程")]),t._v(" "),a("li",[t._v("运行初始化容器（init container）过程")]),t._v(" "),a("li",[t._v("运行主容器（main container）：\n"),a("ol",[a("li",[t._v("容器启动后钩子（post start）、容器终止前钩子（pre stop）")]),t._v(" "),a("li",[t._v("容器的存活性探测（liveness probe）、就绪性探测（readiness probe）")])])]),t._v(" "),a("li",[t._v("Pod终止过程。")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs5vuc8j1bj314k0m27gl.jpg",alt:"image-20210705105129499"}}),t._v(" "),a("h3",{attrs:{id:"_1-pod-阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-pod-阶段"}},[t._v("#")]),t._v(" 1. Pod 阶段")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("取值")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Pending")]),t._v("（悬决）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Pod 已被 Kubernetes 系统接受，但有一个或者多个容器尚未创建亦未运行。此阶段包括等待 Pod 被调度的时间和通过网络下载镜像的时间。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Running")]),t._v("（运行中）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Pod 已经绑定到了某个节点，Pod 中所有的容器都已被创建。至少有一个容器仍在运行，或者正处于启动或重启状态。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Succeeded")]),t._v("（成功）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Pod 中的所有容器都已成功终止，并且不会再重启。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Failed")]),t._v("（失败）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Pod 中的所有容器都已终止，并且至少有一个容器是因为失败终止。也就是说，容器以非 0 状态退出或者被系统终止。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Unknown")]),t._v("（未知）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("因为某些原因无法取得 Pod 的状态。这种情况通常是因为与 Pod 所在主机通信失败。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("如果某节点死掉或者与集群中其他节点失联，Kubernetes 会实施一种策略，将失去的节点上运行的所有 Pod 的 "),a("code",[t._v("phase")]),t._v(" 设置为 "),a("code",[t._v("Failed")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"_2-pod-状况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pod-状况"}},[t._v("#")]),t._v(" 2. Pod 状况")]),t._v(" "),a("p",[t._v("Pod 有一个 "),a("code",[t._v("PodStatus")]),t._v(" 对象，其中包含一个 "),a("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#podcondition-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("PodConditions"),a("OutboundLink")],1),t._v(" 数组。Pod 可能通过也可能未通过其中的一些状况测试。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("PodScheduled")]),t._v("：Pod 已经被调度到某节点；")]),t._v(" "),a("li",[a("code",[t._v("ContainersReady")]),t._v("：Pod 中所有容器都已就绪；")]),t._v(" "),a("li",[a("code",[t._v("Initialized")]),t._v("：所有的 "),a("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/init-containers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Init 容器"),a("OutboundLink")],1),t._v(" 都已成功启动；")]),t._v(" "),a("li",[a("code",[t._v("Ready")]),t._v("：Pod 可以为请求提供服务，并且应该被添加到对应服务的负载均衡池中。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("字段名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("type")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Pod 状况的名称")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("status")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('表明该状况是否适用，可能的取值有 "'),a("code",[t._v("True")]),t._v('", "'),a("code",[t._v("False")]),t._v('" 或 "'),a("code",[t._v("Unknown")]),t._v('"')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("lastProbeTime")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("上次探测 Pod 状况时的时间戳")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("lastTransitionTime")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Pod 上次从一种状态转换到另一种状态时的时间戳")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("reason")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("机器可读的、驼峰编码（UpperCamelCase）的文字，表述上次状况变化的原因")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("message")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("人类可读的消息，给出上次状态转换的详细信息")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-容器状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-容器状态"}},[t._v("#")]),t._v(" 3. 容器状态")]),t._v(" "),a("p",[t._v("一旦 Kube Scheduler 将 Pod 分派给某个节点，"),a("code",[t._v("kubelet")]),t._v(" 就通过 Container Runtime 开始为 Pod 创建容器。")]),t._v(" "),a("p",[t._v("容器的状态有三种：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Waiting")]),t._v("（等待）")]),t._v(" "),a("li",[a("code",[t._v("Running")]),t._v("（运行中）")]),t._v(" "),a("li",[a("code",[t._v("Terminated")]),t._v("（已终止）")])]),t._v(" "),a("h3",{attrs:{id:"_4-pod-创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-pod-创建"}},[t._v("#")]),t._v(" 4. Pod 创建")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("用户通过 "),a("strong",[t._v("kubectl")]),t._v(" 或其他的 API 客户端提交需要创建的 Pod 信息给 "),a("strong",[t._v("API Server")])])]),t._v(" "),a("li",[a("p",[t._v("API Server 开始生成 Pod 对象的信息，并将信息存入 "),a("strong",[t._v("etcd")]),t._v("，然后返回确认信息至客户端")])]),t._v(" "),a("li",[a("p",[t._v("API Server 开始反映 "),a("strong",[t._v("etcd")]),t._v(" 中的 Pod 对象的变化，其它组件使用 "),a("strong",[t._v("watch 机制")]),t._v("来跟踪检查 API Server上 的变动")]),t._v(" "),a("p",[t._v("3.1 Scheduler 发现有新的 Pod 对象要创建，开始为 Pod 分配主机并将结果信息更新至 API Server")]),t._v(" "),a("p",[t._v("3.2 Node 节点上的 kubelet 发现有 Pod 调度过来，尝试调度 Docker 启动容器，并将结果回送至 API Server")])]),t._v(" "),a("li",[a("p",[t._v("API Server 将接收到的 Pod 状态信息存入到 etcd 中")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs5wpf9dj5j312c0k0130.jpg",alt:"image-20210705112122258"}})]),t._v(" "),a("h3",{attrs:{id:"_5-pod-终止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-pod-终止"}},[t._v("#")]),t._v(" 5. Pod 终止")]),t._v(" "),a("ol",[a("li",[t._v("用户向 API Server 发送删除 Pod 对象的命令")]),t._v(" "),a("li",[t._v("API Server 中的 Pod 对象信息会随着时间的推移而更新，在宽限期内（默认30s），Pod 被视为 "),a("strong",[t._v("dead")])]),t._v(" "),a("li",[t._v("将 Pod 标记为 "),a("strong",[t._v("Terminating")]),t._v(" 状态")]),t._v(" "),a("li",[a("strong",[t._v("kubelet")]),t._v(" 在监控到 Pod 对象转为 "),a("strong",[t._v("Terminating")]),t._v(" 状态的同时启动 Pod 关闭过程")]),t._v(" "),a("li",[a("strong",[t._v("端点控制器")]),t._v("监控到 Pod 对象的关闭行为时将其从所有匹配到此端点的 "),a("strong",[t._v("Service")]),t._v(" 资源的端点列表中移除")]),t._v(" "),a("li",[t._v("如果当前 Pod 对象定义了 "),a("strong",[t._v("preStop 钩子处理器")]),t._v("，则在其标记为 Terminating 后会以"),a("strong",[t._v("同步")]),t._v("的方式启动执行")]),t._v(" "),a("li",[t._v("Pod 对象中的容器进程收到停止信号")]),t._v(" "),a("li",[t._v("宽限期结束后，如果 Pod 中还存在运行的进程，那么 Pod 对象会收到立即终止的信号")]),t._v(" "),a("li",[t._v("kubectl 请求 API Server 将此 Pod 资源的宽限期设置为 0 从而完成删除操作，此时Pod对于用户已经不可用了")])]),t._v(" "),a("h3",{attrs:{id:"_6-init-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-init-容器"}},[t._v("#")]),t._v(" 6. init 容器")]),t._v(" "),a("p",[t._v("init 容器是在 Pod 的主容器启动之前要运行的容器，主要是做一些主容器的前置工作，它具有两大特征：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("必须成功")]),t._v("：初始化容器必须运行完成直至结束，如果某个初始化容器运行失败，那么 k8s 需要重启它直至成功完成")]),t._v(" "),a("li",[a("strong",[t._v("顺序执行")]),t._v("：初始化容器必须按照定义的顺序执行，当且仅当前一个成功之后，后面的一个才能运行")])]),t._v(" "),a("p",[t._v("init 容器有很多的应用场景，下面列出的是最常见的几个：")]),t._v(" "),a("ul",[a("li",[t._v("提供主容器镜像中不具备的工具程序或自定义代码")]),t._v(" "),a("li",[t._v("init 容器要先于应用容器串行启动并运行完成，因此可用于延后应用容器的启动直至其依赖的条件得到满足")])]),t._v(" "),a("blockquote",[a("p",[t._v("下面做一个案例，来感受一下 init 容器的作用。")]),t._v(" "),a("ul",[a("li",[t._v("假设要以主容器来运行 Nginx，但是要求在运行 Nginx 之前要能够连接上 MySQL 和 Redis 所在的服务器")]),t._v(" "),a("li",[t._v("为了简化测试，事先规定好 MySQL 和 Redis 所在的 IP 地址分别为 172.16.58.203 和 172.16.58.204，能 ping 通就表示我们能连接上。")])])]),t._v(" "),a("p",[a("strong",[t._v("6.1 创建 pod-initcontainer.yaml 文件")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("initcontainer\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initContainers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# init 容器配置：跟 containers 平级")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mysql\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"until ping 172.16.58.203 -c 1;do echo waiting for mysql ....;sleep 2;done;"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用特权模式运行容器")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("redis\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"until ping 172.16.58.204 -c 1;do echo waiting for redis ....;sleep 2;done;"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("strong",[t._v("6.2 创建 Pod")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-initconatiner.yaml ")]),t._v("\npod/pod-initcontainer created\n")])])]),a("p",[a("strong",[t._v("6.3 查看 Pod 状态")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-initcontainer")]),t._v("\nNAME                READY   STATUS     RESTARTS   AGE\npod-initcontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Init:0/2   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          93s\n")])])]),a("p",[t._v("发现 "),a("code",[t._v("Init:0/2")]),t._v("，说明我们的 "),a("strong",[t._v("init 容器")]),t._v(" 并没有执行成功，需要一直重试。"),a("strong",[t._v("这里失败的原因是我们并没有 172.16.58.203 和 172.16.58.204 这两个地址，所以必然是失败的。")])]),t._v(" "),a("p",[a("strong",[t._v("6.4 动态监听 Pod 状态")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-initcontainer -w")]),t._v("\nNAME                READY   STATUS     RESTARTS   AGE\npod-initcontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Init:0/2   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m31s\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听中")]),t._v("\n")])])]),a("p",[a("strong",[t._v("6.5 新增 IP")])]),t._v(" "),a("p",[t._v("我们新开一个 Shell 来为当前服务器新增 172.16.58.203 和 172.16.58.204 这两个 IP。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" ens33:1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.203 netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),t._v(".255.0 up\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" ens33:2 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.204 netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),t._v(".255.0 up\n")])])]),a("p",[t._v("可以查看：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ifconfig")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 刚刚新增的两个 IP")]),t._v("\nens33:1: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("flags")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("416")]),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v("<")]),t._v("UP,BROADCAST,RUNNING,MULTICAST"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v("\n        inet "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.203  netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),t._v(".255.0  broadcast "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.255\n        ether 00:0c:29:da:d1:91  txqueuelen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ethernet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nens33:2: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("flags")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("416")]),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v("<")]),t._v("UP,BROADCAST,RUNNING,MULTICAST"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v("\n        inet "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.204  netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),t._v(".255.0  broadcast "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.255\n        ether 00:0c:29:da:d1:91  txqueuelen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ethernet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("同时监控到 pod-initcontainer 的变化：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-initcontainer -w")]),t._v("\nNAME                READY   STATUS     RESTARTS   AGE\npod-initcontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Init:0/2   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m31s\npod-initcontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Init:1/2   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          6m38s\npod-initcontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     PodInitializing   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          6m39s\npod-initcontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          6m40s\n")])])]),a("p",[t._v("这就是 init 容器的简单演示了。")]),t._v(" "),a("h3",{attrs:{id:"_7-钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-钩子函数"}},[t._v("#")]),t._v(" 7. 钩子函数")]),t._v(" "),a("p",[t._v("钩子函数能够感知自身生命周期中的事件，并在相应的时刻到来时运行用户指定的程序代码。")]),t._v(" "),a("p",[t._v("k8s 在主容器启动之后和停止之前提供了两个钩子函数：")]),t._v(" "),a("ul",[a("li",[t._v("postStart：容器创建之后执行，如果失败会重启容器")]),t._v(" "),a("li",[t._v("preStop：容器终止之前执行，执行完成之后容器将成功终止，在其完成之前会阻塞删除容器的操作")])]),t._v(" "),a("p",[t._v("钩子处理器支持使用下面的三种方式定义动作：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("exec 命令：在容器内执行一次的命令")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("……\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n……\n")])])])]),t._v(" "),a("li",[a("p",[t._v("tcpSocket：当前容器尝试访问指定的 socket")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("…… \n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n……\n")])])])]),t._v(" "),a("li",[a("p",[t._v("httpGet：在当前容器中向某 url 发起 HTTP 请求")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("…… \n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" / "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#URI地址")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.16.58.200 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#主机地址  ")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持的协议，http或者https")]),t._v("\n……\n")])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("接下来，以 exec 方式为例，演示下钩子函数的使用。")])]),t._v(" "),a("p",[a("strong",[t._v("7.1 创建 pod-hook-exec.yaml 文件")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exec\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n\t\t  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#生命周期的相关配置")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器创建之后执行，如果失败会重启容器")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只执行一次的命令，下面命令在容器启动的时候，执行一条命令，修改掉Nginx的首页内容")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo postStart ... > /usr/share/nginx/html/index.html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器终止之前执行，执行完成之后容器将成功停止，在其完成之前会阻塞删除容器")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#下面命令在容器停止之前停止 Nginx 的服务")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/sbin/nginx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("strong",[t._v("7.2 创建 Pod")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-hook-exec.yaml ")]),t._v("\npod/pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exec created\n")])])]),a("p",[a("strong",[t._v("7.3 查看 Pod 状况")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-hook-exec -o wide")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE     IP            NODE        NOMINATED NODE   READINESS GATES\npod-hook-exec   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m31s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.14   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("strong",[t._v("7.4 访问 Nginx 首页，看看 postStart 是否成功")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.244.1.14")]),t._v("\npostStart "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("h3",{attrs:{id:"_8-容器探测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-容器探测"}},[t._v("#")]),t._v(" 8. 容器探测")]),t._v(" "),a("p",[t._v("容器探测用于检测容器中的应用实例是否正常工作，是保障业务可用性的一种传统机制。如果经过探测，实例的状态不符合预期，那么k8s 就会把该问题实例“"),a("strong",[t._v("摘除")]),t._v("”，不承担业务流量。")]),t._v(" "),a("p",[t._v("k8s 提供了两种探针来实现容器探测，分别是：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("liveness probes（存活性探测）")]),t._v("：用于检测应用实例当前是否处于正常运行状态，如果不是，k8s  会重启容器")]),t._v(" "),a("li",[a("strong",[t._v("readiness probes（就绪性探测）")]),t._v("：用于检测应用实例是否可以接受请求，如果不能，k8s 不会转发流量")])]),t._v(" "),a("blockquote",[a("p",[t._v("k8s 在 "),a("code",[t._v("1.16")]),t._v(" 版本之后新增了 "),a("strong",[t._v("startupProbe")]),t._v(" 探针，用于判断容器内应用程序"),a("strong",[t._v("是否已经启动")]),t._v("。如果配置了 startupProbe 探针，就会先禁止其他的探针，直到 startupProbe 探针成功为止，一旦成功将不再进行探测。")])]),t._v(" "),a("p",[a("strong",[t._v("上述探针目前均支持三种探测方式：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("exec 命令：在容器内支线一次命令，如何命令执行的退出吗为 0，则认为程序正常，否则异常")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("……\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n……\n")])])])]),t._v(" "),a("li",[a("p",[t._v("tcpSocket：将会尝试访问一个用户容器的端口，如果能够建立这条连接，则认为程序正常，否则异常")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("……\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n……\n")])])])]),t._v(" "),a("li",[a("p",[t._v("httpGet：调用容器内 web 应用的 URL，如果返回的状态码在 200 和 399 之间，则认为程序正常，否则异常")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("……\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" / "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#URI地址")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#主机地址")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持的协议，http或者https")]),t._v("\n……\n")])])])])]),t._v(" "),a("p",[a("strong",[t._v("限制探测条件：")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.spec.containers.livenessProbe")]),t._v("\nFIELDS:\n   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n   failureThreshold\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#探测多少次被认定为失败，默认是3个，最小值是1")]),t._v("\n\n   httpGet\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n   initialDelaySeconds\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动后等待多少秒执行第一次探测")]),t._v("\n\n   periodSeconds\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#执行探测的评率，默认是10秒每次，最小1秒每次")]),t._v("\n\n   successThreshold\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连续成功探测多少次才被认定为成功，默认是1")]),t._v("\n\n   tcpSocket\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   \n   timeoutSeconds\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#探测超时时间，默认是1秒，最小1秒")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-重启策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-重启策略"}},[t._v("#")]),t._v(" 9. 重启策略")]),t._v(" "),a("p",[t._v("Pod 的 "),a("code",[t._v("spec")]),t._v(" 中包含一个 "),a("code",[t._v("restartPolicy")]),t._v(" 字段，其可能取值包括：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Always")]),t._v("（默认）")]),t._v(" "),a("li",[a("strong",[t._v("OnFailure")])]),t._v(" "),a("li",[a("strong",[t._v("Never")])])]),t._v(" "),a("p",[a("code",[t._v("restartPolicy")]),t._v(" 适用于 Pod 中的所有容器。"),a("code",[t._v("restartPolicy")]),t._v(" 仅针对同一节点上 "),a("code",[t._v("kubelet")]),t._v("的容器重启动作。")]),t._v(" "),a("p",[t._v("首次需要重启的容器，将在其需要的时候立即进行重启，随后再次重启的操作将由 kubelet 延迟一段时间后进行，且反复的重启操作的延迟时长以此为 10s、20s、40s、80s、160s 和 300s，300s 是最大的延迟时长。")]),t._v(" "),a("p",[t._v("一旦某容器执行了 10 分钟并且没有出现问题，"),a("code",[t._v("kubelet")]),t._v(" 对该容器的重启回退计时器执行重置操作。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("restart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("policy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存活性探测")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /hello\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启策略")]),t._v("\n")])])]),a("h2",{attrs:{id:"九、pod-调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、pod-调度"}},[t._v("#")]),t._v(" 九、Pod 调度")]),t._v(" "),a("p",[t._v("在默认情况下，一个 Pod 在哪个 Node 节点上运行，是由 "),a("strong",[t._v("Scheduler")]),t._v(" 组件采用相应的算法计算出来的，这个过程是不受人工控制的。但是在实际使用中，这并不满足需求，因为很多情况下，我们想控制某些 Pod 到达某些节点上，那么应该怎么做？这就要求了解k8s 对 Pod的调度规则，ks8 提供了四大类调度方式：")]),t._v(" "),a("ul",[a("li",[t._v("自动调度：运行在哪个 Node 节点上完全由 Scheduler 经过一系列的算法计算得出")]),t._v(" "),a("li",[t._v("定向调度：NodeName、NodeSelector")]),t._v(" "),a("li",[t._v("亲和性调度：NodeAffinity、PodAffinity、PodAntiAffinity")]),t._v(" "),a("li",[t._v("污点（容忍）调度：Taints、Toleration")])]),t._v(" "),a("h3",{attrs:{id:"_1-定向调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定向调度"}},[t._v("#")]),t._v(" 1. 定向调度")]),t._v(" "),a("blockquote",[a("p",[t._v("定向调度，指的是利用在 Pod 上声明的 nodeName 或 nodeSelector，以此将 Pod 调度到期望的 Node 节点上。")]),t._v(" "),a("p",[t._v("‼️​注意，这里的调度是"),a("strong",[t._v("强制")]),t._v("的，这就意味着即使要调度的目标 Node 不存在，也会向上面进行调度，只不过 Pod 运行失败而已。")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("nodeName")])]),t._v(" "),a("p",[t._v("nodeName 用于强制约束将 Pod 调度到指定的 name 的 Node 节点上。这种方式，其实是直接跳过 Scheduler 的调度逻辑，直接将Pod 调度到指定名称的节点。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("pod-nodename.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodename\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定调度到k8s-node1节点上")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-nodename.yaml ")]),t._v("\npod/pod-nodename created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-nodename -o wide")]),t._v("\nNAME           READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod-nodename   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          59s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.15   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("可以看到 Pod 被调度到 k8s-node1 节点了。")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("nodeSelector")])]),t._v(" "),a("p",[t._v("nodeSelector 用于将 Pod 调度到添加了指定标签的 Node 节点上，它是通过 k8s 的 "),a("strong",[t._v("label-selector")]),t._v(" 机制实现的，换言之，在 Pod 创建之前，会由 Scheduler 使用 MatchNodeSelector 调度策略进行 Label 匹配，找出目标 node，然后将 Pod 调度到目标节点，该匹配规则是强制约束。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首先给 node 添加标签")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label node k8s-node1 nodeevn=pro")]),t._v("\nnode/k8s-node1 labeled\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label node k8s-node2 nodeevn=test")]),t._v("\nnode/k8s-node2 labeled\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 node 标签")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get nodes --show-labels")]),t._v("\nNAME         STATUS   ROLES    AGE     VERSION   LABELS\nk8s-master   Ready    master   3d23h   v1.18.0   beta.kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,beta.kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,kubernetes.io/hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("k8s-master,kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,node-role.kubernetes.io/master"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nk8s-node1    Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   3d23h   v1.18.0   beta.kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,beta.kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,kubernetes.io/hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("k8s-node1,kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,nodeevn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pro\nk8s-node2    Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   3d23h   v1.18.0   beta.kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,beta.kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,kubernetes.io/hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("k8s-node2,kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,nodeevn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("test\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建  "),a("code",[t._v("pod-nodeselector.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeselector\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeenv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pro "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定调度到具有 nodeenv=pro 标签的 Node 节点上")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-nodeselector.yaml ")]),t._v("\npod/pod-nodeselector created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-nodeselector -o wide")]),t._v("\nNAME               READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod-nodeselector   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          12s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.16   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("因为 k8s-node1 有 nodeevn=pro 这个标签，所以被调度到了 k8s-node1 节点上了。")])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-亲和性调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-亲和性调度"}},[t._v("#")]),t._v(" 2. 亲和性调度")]),t._v(" "),a("p",[t._v("虽然定向调度的两种方式，使用起来非常方便，但是也有一定的问题，那就是如果没有满足条件的 Node，那么 Pod 将不会被运行，即使在集群中还有可用的 Node 列表也不行，这就限制了它的使用场景。")]),t._v(" "),a("p",[t._v("基于上面的问题，k8s 还提供了一种亲和性调度（Affinity）。它在 nodeSelector 的基础之上进行了扩展，可以通过配置的形式，实现优先选择满足条件的 Node 进行调度，如果没有，也可以调度到不满足条件的节点上，使得调度更加灵活。")]),t._v(" "),a("p",[a("strong",[t._v("Affinity")]),t._v(" 主要分为三类：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("nodeAffinity（node 亲和性）")]),t._v("：站在 Pod 的角度上，设置 Pod 希望调度到什么 Node 上")]),t._v(" "),a("li",[a("strong",[t._v("podAffinity（pod 亲和性）")]),t._v("：站在 Pod 的角度上，设置 Pod 希望和哪些已经运行的 Pod 在一起运行")]),t._v(" "),a("li",[a("strong",[t._v("podAntiAffinity（pod 反亲和性）")]),t._v("：站在 Pod 的角度上，设置 Pod "),a("strong",[t._v("不希望")]),t._v("和哪些 Pod 在一起运行")])]),t._v(" "),a("blockquote",[a("p",[t._v("关于亲和性和反亲和性的使用场景的说明：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("亲和性：如果两个应用频繁交互，那么就有必要利用亲和性让两个应用尽可能的靠近，这样可以较少因网络通信而带来的性能损耗。")])]),t._v(" "),a("li",[a("p",[t._v("反亲和性：当应用采用多副本部署的时候，那么就有必要利用反亲和性让各个应用实例打散分布在各 Node 上，这样可以提高服务的高可用性。")])])])]),t._v(" "),a("h4",{attrs:{id:"_2-1-nodeaffinity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-nodeaffinity"}},[t._v("#")]),t._v(" 2.1 nodeAffinity")]),t._v(" "),a("blockquote",[a("p",[t._v("站在 Pod 的角度上，设置 Pod 希望调度到什么 Node 上。")])]),t._v(" "),a("ul",[a("li",[t._v("preferredDuringSchedulingIgnoredDuringExecution <[]Object>：优先调度到满足指定的规则的 Node，相当于软限制\n"),a("ul",[a("li",[t._v("preference\t<Object> -required-   ：一个节点选择器项，与相应的权重相关联\n"),a("ul",[a("li",[t._v("matchExpressions\t<[]Object>：按节点标签列出的节点选择器要求列表（推荐）\n"),a("ul",[a("li",[t._v("key\t<string> -required-")]),t._v(" "),a("li",[t._v("values\t<[]string>")]),t._v(" "),a("li",[t._v("operator\t<string> -required-：操作符可以为 In, NotIn, Exists, DoesNotExist. Gt, and Lt.")])])]),t._v(" "),a("li",[t._v("matchFields\t<[]Object>：按节点字段列出的节点选择器要求列表\n"),a("ul",[a("li",[t._v("key\t<string> -required-")]),t._v(" "),a("li",[t._v("values\t<[]string>")]),t._v(" "),a("li",[t._v("operator\t<string> -required-")])])])])]),t._v(" "),a("li",[t._v("weight\t<integer> -required- ：倾向权重，在范围 1-100")])])]),t._v(" "),a("li",[t._v("requiredDuringSchedulingIgnoredDuringExecution  <Object>：Node 节点必须满足指定的所有规则才可以，相当于硬限制\n"),a("ul",[a("li",[t._v("nodeSelectorTerms\t<[]Object> -required-：节点选择列表\n"),a("ul",[a("li",[t._v("matchExpressions\t<[]Object>")]),t._v(" "),a("li",[t._v("matchFields\t<[]Object>")])])])])])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeenv "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配存在标签的key为nodeenv的节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Exists   \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeenv "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配标签的key为nodeenv,且value是"xxx"或"yyy"的节点')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In    \n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeenv "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配标签的key为nodeenv,且value大于"xxx"的节点')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Gt   \n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("案例1：")])]),t._v(" "),a("p",[t._v("演示 requiredDuringSchedulingIgnoredDuringExecution")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 pod-nodeaffinity-required.yaml 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeaffinity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("required\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#node 亲和性配置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#强制满足所有条件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelectorTerms")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#节点选择列表")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeevn "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存在标签nodeevn的节点，则值要在xxx或yyy")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-nodeaffinity-required.yaml ")]),t._v("\npod/pod-nodeaffinity-required created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 分配情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-nodeaffinity-required -o wide")]),t._v("\nNAME                        READY   STATUS    RESTARTS   AGE    IP       NODE     NOMINATED NODE   READINESS GATES\npod-nodeaffinity-required   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          106s   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("没找到 Pod 的分配情况。")])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 详细信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod pod-nodeaffinity-required")]),t._v("\nName:         pod-nodeaffinity-required\n  Type     Reason            Age        From               Message\n  ----     ------            ----       ----               -------\n  Warning  FailedScheduling  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  default-scheduler  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/3 nodes are available: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" didn"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t match node selector.\n  Warning  FailedScheduling  <unknown>  default-scheduler  0/3 nodes are available: 3 node(s) didn'")]),t._v("t match node selector.\n")])])]),a("p",[t._v("可以看到没有匹配到符合规则的 Node。")])]),t._v(" "),a("li",[a("p",[t._v("给 k8s-node2 打上标签 nodeevn=xxx")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label node k8s-node2 nodeevn=xxx --overwrite")]),t._v("\nnode/k8s-node2 labeled\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get nodes --show-labels")]),t._v("\nNAME         STATUS   ROLES    AGE     VERSION   LABELS\nk8s-master   Ready    master   4d      v1.18.0   beta.kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,beta.kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,kubernetes.io/hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("k8s-master,kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,node-role.kubernetes.io/master"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nk8s-node1    Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   4d      v1.18.0   beta.kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,beta.kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,kubernetes.io/hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("k8s-node1,kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,nodeevn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pro\nk8s-node2    Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   3d23h   v1.18.0   beta.kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,beta.kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,kubernetes.io/arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64,kubernetes.io/hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("k8s-node2,kubernetes.io/os"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux,nodeevn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxx\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 分配情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-nodeaffinity-required -o wide")]),t._v("\nNAME                        READY   STATUS    RESTARTS   AGE     IP            NODE        NOMINATED NODE   READINESS GATES\npod-nodeaffinity-required   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          4m47s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".2.11   k8s-node2   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("k8s-node2 现在已经符合规则，pod 分配成功。")])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("案例2：")])]),t._v(" "),a("p",[t._v("演示 preferredDuringSchedulingIgnoredDuringExecution")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("pod-nodeaffinity-preferred.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeaffinity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("perferred\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#node 亲和性配置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#偏好配置")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preference")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#偏好列表，有对应的权重")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeAffinity\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kkk"')]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jjj"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#权重")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-nodeaffinity-preferred.yaml ")]),t._v("\npod/pod-nodeaffinity-perferred created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-nodeaffinity-perferred -o wide")]),t._v("\nNAME                         READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod-nodeaffinity-perferred   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          50s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".2.12   k8s-node2   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("此时 k8s-node1 和 k8s-node2 都没有 nodeAffinity=kkk 或 jjj 的标签，但是这只是偏好配置，所以还是分配到了其中一个节点，现在我们来给 k8s-node1 加上 nodeAffinity=kkk 的标签。")])]),t._v(" "),a("li",[a("p",[t._v("给 k8s-node1 加标签")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label node k8s-node1 nodeAffinity=kkk")]),t._v("\nnode/k8s-node1 labeled\n")])])])]),t._v(" "),a("li",[a("p",[t._v("重启 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl replace --force -f pod-nodeaffinity-preferred.yaml ")]),t._v("\npod "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod-nodeaffinity-perferred"')]),t._v(" deleted\npod/pod-nodeaffinity-perferred replaced\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-nodeaffinity-perferred -o wide")]),t._v("\nNAME                         READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod-nodeaffinity-perferred   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          19s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.17   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("调度到了 k8s-node1 上了。")])])]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("‼️"),a("strong",[t._v("nodeAffinity 规则设置的注意事项")])])],1),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("如果同时定义了 nodeSelector 和 nodeAffinity，那么必须两个条件都得到满足，Pod 才能运行到指定的 Node 上；")]),t._v(" "),a("li",[t._v("如果 nodeAffinity 指定了多个 nodeSelectorTerms，那么只需其中一个能够匹配成功即可；")]),t._v(" "),a("li",[t._v("如果一个 nodeSelectorTerms 中有多个 matchExpressions，则一个节点必须满足所有的才能匹配成功；")]),t._v(" "),a("li",[t._v("如果一个 Pod 所在的 Node 在 Pod 运行期间其标签发生了变化，不再符合该 Pod 的亲和性需求，系统会忽略此变化。")])])]),t._v(" "),a("h4",{attrs:{id:"_2-2-podaffinity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-podaffinity"}},[t._v("#")]),t._v(" 2.2 podAffinity")]),t._v(" "),a("blockquote",[a("p",[t._v("站在 Pod 的角度上，设置 Pod 希望和哪些已经运行的 Pod 在一起运行。")])]),t._v(" "),a("ul",[a("li",[t._v("requiredDuringSchedulingIgnoredDuringExecution\t<[]Object>：强制\n"),a("ul",[a("li",[t._v("labelSelector\t<Object> ：标签选择器\n"),a("ul",[a("li",[t._v("matchExpressions\t<[]Object>：按节点标签列出的节点选择器要求列表(推荐)\n"),a("ul",[a("li",[t._v("key")]),t._v(" "),a("li",[t._v("value")]),t._v(" "),a("li",[t._v("operator")])])]),t._v(" "),a("li",[t._v("matchLabels\t<map[string]string>：指多个matchExpressions映射的内容")])])]),t._v(" "),a("li",[t._v("namespaces\t<[]string>：指定参照 pod 的 namespace")]),t._v(" "),a("li",[t._v("topologyKey\t<string> -required-  ：指定调度作用域")])])]),t._v(" "),a("li",[t._v("preferredDuringSchedulingIgnoredDuringExecution\t<[]Object>：偏好\n"),a("ul",[a("li",[t._v("podAffinityTerm\t<Object> -required-\n"),a("ul",[a("li",[t._v("labelSelector\t<Object>\n"),a("ul",[a("li",[t._v("matchExpressions\t<[]Object>")]),t._v(" "),a("li",[t._v("matchLabels\t<map[string]string>")])])]),t._v(" "),a("li",[t._v("namespaces\t<[]string>")]),t._v(" "),a("li",[t._v("topologyKey\t<string> -required-")])])]),t._v(" "),a("li",[t._v("weight\t<integer> -required-：权重，值在 1-100 之间")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("topologyKey 用于指定调度的作用域，例如:")]),t._v(" "),a("ul",[a("li",[t._v("如果指定为 "),a("strong",[t._v("kubernetes.io/hostname")]),t._v("，那就是以 Node 节点为区分范围。")]),t._v(" "),a("li",[t._v("如果指定为 "),a("strong",[t._v("beta.kubernetes.io/os")]),t._v("，则以 Node 节点的操作系统类型来区分。")])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("案例1：")])]),t._v(" "),a("p",[t._v("演示 requiredDuringSchedulingIgnoredDuringExecution")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建参照 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("pod-podaffinity-target.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podaffinity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("target\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podenv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pro "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标pod定向调度到k8s-node1")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-podaffinity-target.yaml ")]),t._v("\npod/pod-podaffinity-target created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("oot@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-podaffinity-target -o wide")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod-podaffinity-target   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          23s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.20   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("创建新 Pod 去亲和参照 Pod")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podaffinity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("required\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAffinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置pod亲和")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#强制")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labelSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该Pod必须和拥有标签podenv=xxx或者podenv=yyy")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podenv\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topologyKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/hostname "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以Node节点为区分度")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-podaffinity-required.yaml ")]),t._v("\npod/pod-podaffinity-required created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-podaffinity-required -o wide")]),t._v("\nNAME                       READY   STATUS    RESTARTS   AGE   IP       NODE     NOMINATED NODE   READINESS GATES\npod-podaffinity-required   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          40s   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("因为我们没有符合条件的 Pod，所以新 Pod 得不到调度。")])]),t._v(" "),a("li",[a("p",[t._v("给参照 Pod 上标签 podenv=xxx")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label pod pod-podaffinity-target podenv=xxx --overwrite")]),t._v("\npod/pod-podaffinity-target labeled\n")])])])]),t._v(" "),a("li",[a("p",[t._v("再查看 Pod 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-podaffinity-required -o wide")]),t._v("\nNAME                       READY   STATUS    RESTARTS   AGE    IP            NODE        NOMINATED NODE   READINESS GATES\npod-podaffinity-required   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          107s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.21   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("它就由于 Pod 亲和性跟参照 Pod 一起被调度到 k8s-node1 节点上了。")])])]),t._v(" "),a("h4",{attrs:{id:"_2-3-podantiaffinity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-podantiaffinity"}},[t._v("#")]),t._v(" 2.3 podAntiAffinity")]),t._v(" "),a("blockquote",[a("p",[t._v("站在 Pod 的角度上，设置 Pod 不希望和哪些已经运行的 Pod 在一起运行。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编写 "),a("code",[t._v("pod-podantiaffinity-required.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podantiaffinity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("required\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAntiAffinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置pod反亲和性")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#强制")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labelSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该Pod不想podenv=xxx的Pod一起运行")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podenv\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topologyKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/hostname "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以Node节点为区分度")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-podantiaffinity-required.yaml ")]),t._v("\npod/pod-podantiaffinity-required created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-podantiaffinity-required -o wide")]),t._v("\nNAME                           READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod-podantiaffinity-required   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          39s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".2.15   k8s-node2   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("可以看到当前 Pod 避开了在 k8s-node1 的拥有 proenv=xxx 的 Pod，被调度到了 k8s-node2。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-污点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-污点"}},[t._v("#")]),t._v(" 3. 污点")]),t._v(" "),a("p",[t._v("前面的调度方式都是站在 Pod 的角度上，通过在 Pod 上添加属性，来确定 Pod 是否要调度到指定的 Node 上，其实我们也可以"),a("strong",[t._v("站在 Node 的角度上")]),t._v("，通过在 Node 上添加"),a("strong",[t._v("污点属性")]),t._v("，来决定是否运行 Pod 调度过来。")]),t._v(" "),a("p",[t._v("Node 被设置了污点之后就和 Pod 之间存在了一种相斥的关系，进而拒绝 Pod 调度进来，甚至可以将已经存在的 Pod 驱逐出去。")]),t._v(" "),a("p",[t._v("污点的格式为："),a("code",[t._v("key=value:effect")]),t._v("，key 和 value 是污点的标签，effect 描述污点的作用，支持如下三个选项：")]),t._v(" "),a("ul",[a("li",[t._v("PreferNoSchedule：k8s 将尽量避免把 Pod 调度到具有该污点的 Node 上，除非没有其他节点可以调度")]),t._v(" "),a("li",[t._v("NoSchedule：k8s 将不会把 Pod 调度到具有该污点的 Node 上，但是不会影响当前 Node 上已经存在的 Pod")]),t._v(" "),a("li",[t._v("NoExecute：k8s 将不会把 Pod 调度到具有该污点的 Node 上，同时也会将 Node 上已经存在的 Pod 驱逐")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs879hva3wj30sb06gmyo.jpg",alt:"污点的三种格式.png"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("设置污点")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl taint node xxx "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value:effect\n")])])])]),t._v(" "),a("li",[a("p",[t._v("去除污点")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl taint node xxx key:effect-\n")])])])]),t._v(" "),a("li",[a("p",[t._v("去除所有污点")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl taint node xxx key-\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Node 上的污点")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl describe node xxx\n")])])])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("案例：")])]),t._v(" "),a("p",[t._v("演示污点效果。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("前提")]),t._v(" "),a("p",[t._v("准备节点 k8s-node1，为了演示效果，暂时停止 k8s-node2")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete node k8s-node2")]),t._v("\nnode "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k8s-node2"')]),t._v(" deleted\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get nodes")]),t._v("\nNAME         STATUS   ROLES    AGE     VERSION\nk8s-master   Ready    master   4d23h   v1.18.0\nk8s-node1    Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   26m     v1.18.0\n")])])])]),t._v(" "),a("li",[a("p",[t._v("为 k8s-node1 节点设置一个污点："),a("code",[t._v("tag=hedon:PreferNoSchedule")]),t._v("，然后创建 pod1")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加污点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint node k8s-node1 tag=hedon:PreferNoSchedule")]),t._v("\nnode/k8s-node1 tainted\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 pod1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run pod1 --image=nginx:1.17.1")]),t._v("\npod/pod1 created\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查 pod1 调度情况")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod1 -o wide")]),t._v("\nNAME   READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod1   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          16s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.27   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("符合预期：“"),a("strong",[t._v("尽量不要调度过来")]),t._v("”。因为没有别的节点可用的，还是可以调度到 k8s-node1 的。")])]),t._v(" "),a("li",[a("p",[t._v("为 k8s-node1 取消"),a("code",[t._v("tag=hedon:PreferNoSchedule")]),t._v(" 污点，然后设置新污点 "),a("code",[t._v("tag=hedon:NoSchedule")]),t._v("，然后创建 pod2")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消污点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint node k8s-node1 tag:PreferNoSchedule-")]),t._v("\nnode/k8s-node1 untainted\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置污点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint node k8s-node1 tag=hedon:NoSchedule")]),t._v("\nnode/k8s-node1 tainted\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 pod2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run pod2 --image=nginx:1.17.1")]),t._v("\npod/pod2 created\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 pod2 调度情况")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod2 -o wide")]),t._v("\nNAME   READY   STATUS    RESTARTS   AGE   IP       NODE     NOMINATED NODE   READINESS GATES\npod2   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          8s    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("符合预期：“"),a("strong",[t._v("新的别来")]),t._v("”。")])]),t._v(" "),a("li",[a("p",[t._v("为 k8s-node1 取消"),a("code",[t._v("tag=hedon:NoSchedule")]),t._v(" 污点，然后设置新污点 "),a("code",[t._v("tag=hedon:NoExecute")]),t._v("，然后查看前面的 pod1 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 Pod1 调度情况")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod1 -o wide")]),t._v("\nNAME   READY   STATUS    RESTARTS   AGE     IP            NODE        NOMINATED NODE   READINESS GATES\npod1   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          5m21s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.27   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消污点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint node k8s-node1 tag:NoSchedule-")]),t._v("\nnode/k8s-node1 untainted\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置污点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint node k8s-node1 tag=hedon:NoExecute")]),t._v("\nnode/k8s-node1 tainted\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 Pod1 调度情况")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod1 -o wide")]),t._v("\nError from server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NotFound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": pods "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod1"')]),t._v(" not found\n")])])]),a("p",[t._v("符合预期：“"),a("strong",[t._v("在的赶紧走")]),t._v("”。Pod")])])]),t._v(" "),a("h3",{attrs:{id:"_4-容忍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-容忍"}},[t._v("#")]),t._v(" 4. 容忍")]),t._v(" "),a("p",[t._v("上面介绍了污点的作用，我们可以在 Node 上添加污点用来拒绝 Pod 调度上来，但是如果就是想让一个 Pod 调度到一个有污点的 Node 上去，这时候应该怎么做？这就需要使用到"),a("strong",[t._v("容忍")]),t._v("。")]),t._v(" "),a("p",[t._v("容忍的详细配置：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl explain pod.spec.tolerations\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nFIELDS:\n  key       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对应着要容忍的污点的键，空意味着匹配所有的键")]),t._v("\n  value     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对应着要容忍的污点的值")]),t._v("\n  operator  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# key-value的运算符，支持Equal和Exists（默认）")]),t._v("\n  effect    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对应污点的effect，空意味着匹配所有影响")]),t._v("\n  tolerationSeconds   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容忍时间, 当effect为NoExecute时生效，表示pod在Node上的停留时间")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("当 operator 为 Equal 的时候，如果 Node 节点有多个 Taint，那么 Pod 每个 Taint 都需要容忍才能部署上去")])]),t._v(" "),a("li",[a("p",[t._v("当 operator 为 Exists 的时候，有如下的三种写法：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("容忍指定的污点，污点带有指定的 effect")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("tolerations: "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容忍")]),t._v("\n    - key: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要容忍的污点的key")]),t._v("\n      operator: Exists "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作符")]),t._v("\n      effect: NoExecute "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加容忍的规则，这里必须和标记的污点规则相同")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("容忍指定的污点，不考虑具体的effect：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("  tolerations: "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容忍")]),t._v("\n    - key: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要容忍的污点的key")]),t._v("\n      operator: Exists "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作符")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("容忍一切污点（慎用）：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("tolerations: "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容忍")]),t._v("\n    - operator: Exists "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作符")]),t._v("\n")])])])])])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("案例：")])]),t._v(" "),a("p",[t._v("在上面的污点中，已经给 k8s-node1 打上了 NoExecute 的污点，此时 Pod 是调度不上去的，此时可以通过在 Pod 中添加容忍，将 Pod 调度上去。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("pod-toleration.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("toleration\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hedon\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容忍配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag"')]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#要容忍的污点的key")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Equal   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#操作符")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hedon"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#要容忍的污点的value")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NoExecute "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#增加容忍的规则，这里必须和标记的污点规则相同")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-toleration.yaml ")]),t._v("\npod/pod-toleration created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod 调度情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-toleration -o wide")]),t._v("\nNAME             READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npod-toleration   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          31s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.29   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("可以看到 pod-toleration 容忍了 k8s-node1 上的污点，调度到了 k8s-node1 上面了。")])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("恢复环境：")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("删除 k8s-node1 的一切污点")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint node k8s-node1 tag-")]),t._v("\nnode/k8s-node1 untainted\n")])])])]),t._v(" "),a("li",[a("p",[t._v("k8s-node2 重新加入集群")]),t._v(" "),a("p",[t._v("在 k8s-master 生成永久令牌")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm token create --ttl 0 --print-join-command")]),t._v("\nW0706 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":21:03.410825   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22427")]),t._v(" configset.go:202"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" WARNING: kubeadm cannot validate component configs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("groups")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet.config.k8s.io kubeproxy.config.k8s.io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nkubeadm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.200:6443 --token ag80av.jnp23j2405k78sr9     --discovery-token-ca-cert-hash sha256:e4959de30bb94df662147bdf32044d5278eecd7c77f2e56b51ae07860a52fd79 \n")])])]),a("p",[t._v("k8s-node2 删除原来的 CA 文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf /etc/kubernetes/pki/ca.crt")]),t._v("\n")])])]),a("p",[t._v("k8s-node2 删除原来的 k8s 配置文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf /etc/kubernetes/kubelet.conf")]),t._v("\n")])])]),a("p",[t._v("k8s-node2 停止原来的 k8s 进程")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 PID")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ps -ef | grep k8s")]),t._v("\navahi       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("599")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":05 ?        00:00:01 avahi-daemon: running "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k8s-node2.local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nroot       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9681")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":13 ?        00:10:47 /usr/bin/kubelet --bootstrap-kubeconfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/kubelet.conf --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lib/kubelet/config.yaml --cgroup-driver"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("systemd --network-plugin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cni --pod-infra-container-image"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("k8s.gcr.io/pause:3.2 --cgroup-driver"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("systemd\nroot     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("121478")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("121182")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":24 pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto k8s\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kill")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kill -9 9681")]),t._v("\n")])])]),a("p",[t._v("k8s-node2 加入 集群")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm join 172.16.58.200:6443 --token ag80av.jnp23j2405k78sr9     --discovery-token-ca-cert-hash sha256:e4959de30bb94df662147bdf32044d5278eecd7c77f2e56b51ae07860a52fd79")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubectl get nodes'")]),t._v(" on the control-plane to see this node "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" the cluster\n")])])]),a("p",[t._v("k8s-master 检查 node 情况：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get nodes")]),t._v("\nNAME         STATUS   ROLES    AGE     VERSION\nk8s-master   Ready    master   4d23h   v1.18.0\nk8s-node1    Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   3m3s    v1.18.0\nk8s-node2    Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   106s    v1.18.0\n")])])])])])]),t._v(" "),a("h2",{attrs:{id:"十、临时容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、临时容器"}},[t._v("#")]),t._v(" 十、临时容器")]),t._v(" "),a("h3",{attrs:{id:"_1-临时容器简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-临时容器简介"}},[t._v("#")]),t._v(" 1. 临时容器简介")]),t._v(" "),a("p",[t._v("临时容器是一种特殊的容器，该容器可以在现有的 Pod 中临时运行，以便完成我们发起的操作，比如故障排查。我们应该使用临时容器来检查服务，而不是用临时容器来构建应用程序。")]),t._v(" "),a("p",[t._v("Pod 是 k8s 集群进行管理的最小单元，由于 Pod 是一次性且可以替换的，因此 Pod 一旦被创建，就无法将容器加入到 Pod 中。而且，我们通常使用 Deployment 来删除并替换P od。但是，有的时候我们需要检查现有 Pod 的状态，比如对难以复现的故障进行排查。在这些场景中，可以在现有 Pod 中运行临时容器来检查其状态并运行任意命令。")]),t._v(" "),a("p",[t._v("临时容器和其他容器的不同之处在于，"),a("strong",[t._v("它们缺少对资源或执行的保证，并且永远不会自动重启，因此不适合用来构建应用程序")]),t._v("。临时容器使用和常规容器相同的 "),a("code",[t._v("ContainerSpec")]),t._v("来描述，但是许多字段是不兼容或者不允许的：")]),t._v(" "),a("ul",[a("li",[t._v("临时容器没有端口配置，因此像 "),a("code",[t._v("ports")]),t._v("、"),a("code",[t._v("livenessProbe")]),t._v("、"),a("code",[t._v("readinessProbe")]),t._v("这样的字段是没有的")]),t._v(" "),a("li",[t._v("Pod 的资源分配是不可变的，因此 "),a("code",[t._v("resources")]),t._v(" 这样的配置临时容器也是没有的")])]),t._v(" "),a("p",[t._v("临时容器是使用 "),a("code",[t._v("ephemeralcontainers")]),t._v("来进行创建的，而不是直接添加到 "),a("code",[t._v("pod.spec")]),t._v("中，所以是无法使用 "),a("code",[t._v("kubectl edit")]),t._v(" 来添加一个临时容器。")]),t._v(" "),a("p",[t._v("和常规容器一样，将临时容器添加到 Pod 后，不能更改或删除临时容器。")]),t._v(" "),a("h3",{attrs:{id:"_2-临时容器作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-临时容器作用"}},[t._v("#")]),t._v(" 2. 临时容器作用")]),t._v(" "),a("ul",[a("li",[t._v("当由于容器奔溃或容器镜像不包含调试工具而导致 "),a("code",[t._v("kubectl exec")]),t._v(" 无用的时候，临时容器对于"),a("strong",[t._v("交互式故障排查")]),t._v("非常有用。")]),t._v(" "),a("li",[t._v("比如，像 "),a("code",[t._v("distroless 镜像")]),t._v(" 允许用户部署最小的容器镜像，从而减少攻击面并减少故障和漏洞的暴露。由于 "),a("code",[t._v("distroless 镜像")]),t._v("不包含 Shell 或任何的调试工具，因此很难单独使用 "),a("code",[t._v("kubectl exec")]),t._v(" 命令进行故障排查。")]),t._v(" "),a("li",[t._v("使用临时容器的时候，启用 "),a("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/share-process-namespace/",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程名字空间共享"),a("OutboundLink")],1),t._v(" 很有帮助，可以查看其他容器中的进程。")])]),t._v(" "),a("h3",{attrs:{id:"_3-临时容器配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-临时容器配置"}},[t._v("#")]),t._v(" 3. 临时容器配置")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("查看临时容器是否开启（默认关闭）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubelet -h | grep EphemeralContainers")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("EphemeralContainers")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ALPHA - "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在每个节点（不管 Master 节点还是 Node 节点）修改 kubectl 的参数")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：kubectl 的启动文件的路径是 /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 /etc/sysconfig/kubelet 文件，添加 --feature-gates EphemeralContainers=true")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/sysconfig/kubelet\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KUBELET_EXTRA_ARGS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--cgroup-driver=systemd --feature-gates EphemeralContainers=true"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KUBE_PROXY_MODE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v('"ipvs\n\n'),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 /var/lib/kubelet/config.yaml 文件，添加 featureGates: EphemeralContainers: true")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /var/lib/kubelet/config.yaml\n\napiVersion: kubelet.config.k8s.io/v1beta1\nauthentication:\n  anonymous:\n    enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  webhook:\n    cacheTTL: 0s\n    enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  x509:\n    clientCAFile: /etc/kubernetes/pki/ca.crt\nauthorization:\n  mode: Webhook\n  webhook:\n    cacheAuthorizedTTL: 0s\n    cacheUnauthorizedTTL: 0s\nclusterDNS:\n- "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.10\nclusterDomain: cluster.local\ncpuManagerReconcilePeriod: 0s\nevictionPressureTransitionPeriod: 0s\nfileCheckFrequency: 0s\nhealthzBindAddress: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\nhealthzPort: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10248")]),t._v("\nhttpCheckFrequency: 0s\nimageMinimumGCAge: 0s\nkind: KubeletConfiguration\nnodeStatusReportFrequency: 0s\nnodeStatusUpdateFrequency: 0s\nrotateCertificates: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nruntimeRequestTimeout: 0s\nstaticPodPath: /etc/kubernetes/manifests\nstreamingConnectionIdleTimeout: 0s\nsyncFrequency: 0s\nvolumeStatsAggPeriod: 0s\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改部分")]),t._v("\nfeatureGates:\n  EphemeralContainers: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("加载配置文件重启 kubelet")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl daemon-reload\nsystemctl restart kubelet\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在 Master 节点修改 "),a("code",[t._v("kube-apiserver.yaml")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim /etc/kubernetes/manifests/kube-apiserver.yaml")]),t._v("\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".49.100:6443\n  creationTimestamp: null\n  labels:\n    component: kube-apiserver\n    tier: control-plane\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --advertise-address"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".49.100\n    - --allow-privileged"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n    - --authorization-mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Node,RBAC\n    - --client-ca-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/ca.crt\n    - --enable-admission-plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NodeRestriction\n    - --enable-bootstrap-token-auth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n    - --etcd-cafile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/etcd/ca.crt\n    - --etcd-certfile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/apiserver-etcd-client.crt\n    - --etcd-keyfile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/apiserver-etcd-client.key\n    - --etcd-servers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://127.0.0.1:2379\n    - --insecure-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    - --kubelet-client-certificate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/apiserver-kubelet-client.crt\n    - --kubelet-client-key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/apiserver-kubelet-client.key\n    - --kubelet-preferred-address-types"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("InternalIP,ExternalIP,Hostname\n    - --proxy-client-cert-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/front-proxy-client.crt\n    - --proxy-client-key-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/front-proxy-client.key\n    - --requestheader-allowed-names"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("front-proxy-client\n    - --requestheader-client-ca-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/front-proxy-ca.crt\n    - --requestheader-extra-headers-prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("X-Remote-Extra-\n    - --requestheader-group-headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("X-Remote-Group\n    - --requestheader-username-headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("X-Remote-User\n    - --secure-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6443")]),t._v("\n    - --service-account-issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://kubernetes.default.svc.cluster.local\n    - --service-account-key-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/sa.pub\n    - --service-account-signing-key-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/sa.key\n    - --service-cluster-ip-range"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.0/12\n    - --tls-cert-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/apiserver.crt\n    - --tls-private-key-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/apiserver.key\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改部分")]),t._v("\n    - --feature-gates"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("EphemeralContainers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在 Master 节点上修改 "),a("code",[t._v("kube-scheduler.yaml")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim /etc/kubernetes/manifests/kube-scheduler.yaml")]),t._v("\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    component: kube-scheduler\n    tier: control-plane\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-scheduler\n    - --authentication-kubeconfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/scheduler.conf\n    - --authorization-kubeconfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/scheduler.conf\n    - --bind-address"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n    - --kubeconfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/scheduler.conf\n    - --leader-elect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改部分")]),t._v("\n    - --feature-gates"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("EphemeralContainers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_4-使用临时容器在线-debug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用临时容器在线-debug"}},[t._v("#")]),t._v(" 4. 使用临时容器在线 debug")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建一个 "),a("code",[t._v("nginx-yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shareProcessNamespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个配置非常重要，一定要配置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f nginx.yaml ")]),t._v("\npod/nginx created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 "),a("code",[t._v("ec.json")]),t._v(" 文件，内容如下（注意：name 是 Pod 的名称）")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apiVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"kind"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EphemeralContainers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"metadata"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ephemeralContainers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"command"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"image"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"busybox"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"imagePullPolicy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IfNotPresent"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debugger"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stdin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tty"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"terminationMessagePolicy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"File"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("更新已经运行的容器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl replace --raw /api/v1/namespaces/default/pods/nginx/ephemeralcontainers  -f ec.json\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看新创建的临时容器的状态")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod nginx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 临时容器")]),t._v("\nEphemeral Containers:\n  debugger:\n    Container ID:  docker://15f9aa6f6a98fcaff2d6ee85c8a5a6bc7d85293ca832e81a16f0df8c7c61b395\n    Image:         busybox\n    Image ID:      docker-pullable://busybox@sha256:930490f97e5b921535c153e0e7110d251134cc4b72bbb8133c6a5065cc68580d\n    Port:          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Host Port:     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Command:\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n    State:          Running\n      Started:      Tue, 06 Jul "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":46:11 -0700\n    Ready:          False\n    Restart Count:  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    Environment:    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Mounts:         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("可以使用如下的命令连接临时容器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it nginx -c debugger -- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或")]),t._v("\nkubectl attach -it nginx -c debugger\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"十一、服务质量-qos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十一、服务质量-qos"}},[t._v("#")]),t._v(" 十一、服务质量 Qos")]),t._v(" "),a("p",[t._v("k8s 创建Pod的时候就会指定 QoS")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod nginx")]),t._v("\nQoS Class:       BestEffort\n")])])]),a("p",[t._v("QoS 分为如下的三类：")]),t._v(" "),a("ul",[a("li",[t._v("Guaranteed\n"),a("ul",[a("li",[t._v("Pod 中的"),a("strong",[t._v("每个")]),t._v("容器，包含初始化容器，必须指定内存请求和内存限制，并且两者要相等")]),t._v(" "),a("li",[t._v("Pod 中的"),a("strong",[t._v("每个")]),t._v("容器，包含初始化容器，必须指定 CPU 请求和 CPU 限制，并且两者要相等")])])]),t._v(" "),a("li",[t._v("Burstable\n"),a("ul",[a("li",[t._v("Pod 不符合 Guaranteed QoS 类的标准")]),t._v(" "),a("li",[t._v("Pod 中"),a("strong",[t._v("至少")]),t._v("一个容器具有内存或 CPU 请求，但是值不相等")])])]),t._v(" "),a("li",[t._v("BestEffort\n"),a("ul",[a("li",[t._v("Pod 中的容器"),a("strong",[t._v("必须没有")]),t._v("设置内存和 CPU 限制或请求")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("一旦出现 OOM，k8s 为了保证服务的可用，会先删除 QoS 为 BestEffort 的 Pod，然后删除 QoS 为 Burstable 的Pod，最后删除 QoS 为 Guaranteed 的 Pod。")])]),t._v(" "),a("h2",{attrs:{id:"十二、pod-控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十二、pod-控制器"}},[t._v("#")]),t._v(" 十二、Pod 控制器")]),t._v(" "),a("p",[t._v("在 k8s 中，按照 Pod 的创建方式可以将其分为两类：")]),t._v(" "),a("ul",[a("li",[t._v("自主式 Pod：k8s 直接创建出来的 Pod，这种 Pod 删除后就没有了，也不会重建")]),t._v(" "),a("li",[t._v("控制器创建 Pod：通过 Pod 控制器创建的 Pod，这种 Pod 删除之后还会自动重建")])]),t._v(" "),a("p",[t._v("Pod 控制器：Pod 控制器是管理 Pod 的中间层，使用了 Pod 控制器之后，我们只需要告诉 Pod 控制器，想要多少个什么样的 Pod 就可以了，它就会创建出满足条件的 Pod 并确保每一个 Pod 处于用户期望的状态，如果 Pod 在运行中出现故障，控制器会基于指定的策略重启或重建 Pod。")]),t._v(" "),a("p",[t._v("在 k8s 中，有很多类型的 Pod 控制器，每种都有自己的适合的场景，常见的有下面这些：")]),t._v(" "),a("ul",[a("li",[t._v("ReplicationController：比较原始的 Pod 控制器，已经被废弃，由 ReplicaSet 替代")]),t._v(" "),a("li",[t._v("ReplicaSet：保证指定数量的 Pod 运行，并支持 Pod 数量变更，镜像版本变更")]),t._v(" "),a("li",[t._v("Deployment：通过控制 ReplicaSet 来控制 Pod，并支持滚动升级、版本回退")]),t._v(" "),a("li",[t._v("Horizontal Pod Autoscaler：可以根据集群负载自动调整 Pod 的数量，实现削峰填谷")]),t._v(" "),a("li",[t._v("DaemonSet：在集群中的指定 Node 上都运行一个副本，一般用于守护进程类的任务")]),t._v(" "),a("li",[t._v("Job：它创建出来的 Pod 只要完成任务就立即退出，用于执行一次性任务")]),t._v(" "),a("li",[t._v("CronJob：它创建的 Pod 会周期性的执行，用于执行周期性的任务")]),t._v(" "),a("li",[t._v("StatefulSet：管理有状态的应用")])])])}),[],!1,null,null,null);s.default=n.exports}}]);