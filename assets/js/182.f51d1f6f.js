(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{593:function(t,s,a){"use strict";a.r(s);var e=a(47),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"kubernetes-数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-数据存储"}},[t._v("#")]),t._v(" Kubernetes 数据存储")]),t._v(" "),a("p",[t._v("在前面已经提到，容器的生命周期可能很短，会被频繁的创建和销毁。那么容器在销毁的时候，保存在容器中的数据也会被清除。这种结果对用户来说，在某些情况下是不乐意看到的。为了持久化保存容器中的数据，k8s 引入了 "),a("strong",[t._v("Volume")]),t._v(" 的概念。")]),t._v(" "),a("p",[t._v("Volume 是 Pod 中能够被多个容器访问的共享目录，它被定义在 Pod 上，然后被一个 Pod 里面的多个容器挂载到具体的文件目录下，k8s 通过 Volume 实现同一个 Pod 中不同容器之间的数据共享以及数据的持久化存储。Volume 的生命周期不与 Pod 中的单个容器的生命周期有关，当容器终止或者重启的时候，Volume 中的数据也不会丢失。")]),t._v(" "),a("p",[t._v("k8s 的 Volume 支持多种类型，比较场景的有下面几个：")]),t._v(" "),a("ul",[a("li",[t._v("简单存储：EmptyDir、HostPath、NFS")]),t._v(" "),a("li",[t._v("高级存储：PV，PVC")]),t._v(" "),a("li",[t._v("配置存储：ConfigMap、Secret")])]),t._v(" "),a("h2",{attrs:{id:"一、基本存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、基本存储"}},[t._v("#")]),t._v(" 一、基本存储")]),t._v(" "),a("h3",{attrs:{id:"_1-emptydir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-emptydir"}},[t._v("#")]),t._v(" 1. emptyDir")]),t._v(" "),a("p",[t._v("emptyDir 是最基础的 Volume 类型，一个 emptyDir 就是Host上的一个空目录。")]),t._v(" "),a("p",[t._v("emptyDir 是在 Pod 被分配到 Node 时创建的，它的初始内容为空，并且无须指定宿主机上对应的目录文件，因为 k8s 会自动分配一个目录，"),a("strong",[t._v("当 Pod 销毁时，emptyDir 中的数据也会被永久删除。")])]),t._v(" "),a("p",[t._v("emptyDir 的用途如下：")]),t._v(" "),a("ul",[a("li",[t._v("临时空间，例如用于某些应用程序运行时所需的临时目录，且无须永久保留")]),t._v(" "),a("li",[t._v("一个容器需要从另一个容器中获取数据的目录（多容器共享目录）")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("案例：")])]),t._v(" "),a("p",[t._v("在一个 Pod 中准备两个容器 nginx 和 busybox，然后声明一个 volume 分别挂载到两个容器的目录中，然后 nginx 容器负责向volume 中写日志，busybox 中通过命令将日志内容读到控制台。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gsdyjd17akj312c0gcai8.jpg",alt:"image-20210712102913718"}})])]),t._v(" "),a("h4",{attrs:{id:"_1-1-创建-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-创建-pod"}},[t._v("#")]),t._v(" 1.1 创建 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("volume-emptydir.yaml")]),t._v(" 文件：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("emptydir\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将logs-volume挂载到nginx容器中对应的目录，该目录为/var/log/nginx")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log/nginx\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/bash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tail -f /logs/access.log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始命令，动态读取指定文件的内容变化")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将logs-volume挂载到busybox容器中的对应父母，该目录为/logs")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /logs\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明volume，name为logs-volume，类型为emptyDir")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gsdz3itjhfj314k0oinck.jpg",alt:"image-20210712104838415"}})]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f volume-emptydir.yaml ")]),t._v("\npod/volume-emptydir created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod volume-emptydir -n dev -o wide")]),t._v("\nNAME              READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\nvolume-emptydir   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          63s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".3.20   k8s-node2   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_1-2-监听日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-监听日志"}},[t._v("#")]),t._v(" 1.2 监听日志")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl logs -f volume-emptydir -n dev -c busybox\n")])])]),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gsdz2e0545j30l6012mwz.jpg",alt:"img"}})]),t._v(" "),a("h4",{attrs:{id:"_1-2-访问-pod-中的-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-访问-pod-中的-nginx"}},[t._v("#")]),t._v(" 1.2 访问 Pod 中的 nginx")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("访问几次 Pod 中的 nginx，使其有日志输出")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".3.20\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-hostpath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-hostpath"}},[t._v("#")]),t._v(" 2. hostPath")]),t._v(" "),a("p",[t._v("很明显 emptyDir 中的数据不会被持久化，它会随着 Pod 的结束而销毁，如果想要简单的将数据持久化到主机中，可以选择 "),a("strong",[t._v("hostPath")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("hostPath 就是将 Node 主机中的一个实际目录挂载到 Pod 中，以供容器使用")]),t._v("，这样的设计就可以保证 Pod 销毁了，但是数据依旧可以保存在 Node 主机上。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gsdz5yfv1vj313y0i4n4t.jpg",alt:"image-20210712105059079"}})]),t._v(" "),a("h4",{attrs:{id:"_2-1-创建-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建-pod"}},[t._v("#")]),t._v(" 2.1 创建 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("volume-hostpath.yaml")]),t._v(" 文件：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hostpath\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将logs-volume挂载到nginx容器中对应的目录，该目录为/var/log/nginx")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log/nginx\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tail -f /logs/access.log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始命令，动态读取指定文件")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将logs-volume挂载到busybox容器中的对应目录，该目录为/logs")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /logs\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 声明volume，name为logs-volume，类型为hostPath")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/logs\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DirectoryOrCreate "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目录存在就使用，不存在就先创建再使用")]),t._v("\n")])])]),a("p",[t._v("type 的值的说明：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DirectoryOrCreate：目录存在就使用，不存在就先创建后使用")])]),t._v(" "),a("li",[a("p",[t._v("Directory：目录必须存在")])]),t._v(" "),a("li",[a("p",[t._v("FileOrCreate：文件存在就使用，不存在就先创建后使用")])]),t._v(" "),a("li",[a("p",[t._v("File：文件必须存在")])]),t._v(" "),a("li",[a("p",[t._v("Socket：unix 套接字必须存在")])]),t._v(" "),a("li",[a("p",[t._v("CharDevice：字符设备必须存在")])]),t._v(" "),a("li",[a("p",[t._v("BlockDevice：块设备必须存在")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f volume-hostpath.yaml\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get pod volume-hostpath -n dev -o wide\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-2-访问-pod-中的-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-访问-pod-中的-nginx"}},[t._v("#")]),t._v(" 2.2 访问 Pod 中的 nginx")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" PodIP地址:80\n")])])]),a("h4",{attrs:{id:"_2-3-删除-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-删除-pod"}},[t._v("#")]),t._v(" 2.3 删除 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl delete pod volume-hostpath -n dev\n")])])]),a("h4",{attrs:{id:"_2-4-去-node-节点找到-hostpath-映射的目录中的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-去-node-节点找到-hostpath-映射的目录中的文件"}},[t._v("#")]),t._v(" 2.4 去 node 节点找到 hostPath 映射的目录中的文件")]),t._v(" "),a("p",[t._v("到Pod所在的节点（k8s-node1 或 k8s-node2）查看 hostPath 映射的目录中的文件：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" /root/logs\n")])])]),a("blockquote",[a("p",[t._v("同样的道理，如果在此目录中创建文件，到容器中也是可以看到的。")])]),t._v(" "),a("h3",{attrs:{id:"_3-nfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-nfs"}},[t._v("#")]),t._v(" 3. NFS")]),t._v(" "),a("p",[a("strong",[t._v("hostPath 虽然可以解决数据持久化的问题，但是一旦 Node 节点故障了，Pod 如果转移到别的 Node 节点上，又会出现问题")]),t._v("，此时需要准备单独的网络存储系统，比较常用的是 "),a("strong",[t._v("NFS")]),t._v(" 和 "),a("strong",[t._v("CIFS")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("NFS（network file system）")]),t._v(" 是一个网络文件存储系统，可以搭建一台 NFS 服务器，然后将 Pod 中的存储直接连接到 NFS 系统上，这样，无论 Pod 在节点上怎么转移，只要 Node 和 NFS 的对接没有问题，数据就可以成功访问。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gsdzf9o570j31iu0ge14y.jpg",alt:"image-20210712105956016"}})]),t._v(" "),a("h4",{attrs:{id:"_3-1-搭建-nfs-服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-搭建-nfs-服务器"}},[t._v("#")]),t._v(" 3.1 搭建 NFS 服务器")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首先需要准备 NFS 服务器，这里为了简单，直接在 k8s-master 节点做 NFS 服务器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y nfs-utils rpcbind\n")])])])]),t._v(" "),a("li",[a("p",[t._v("准备一个共享目录")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -pv /root/data/nfs\n")])])])]),t._v(" "),a("li",[a("p",[t._v("将共享目录以读写权限暴露给"),a("code",[t._v("172.16.58.0/24")]),t._v("网段中的所有主机")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim /etc/exports")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /etc/exports")]),t._v("\n/root/data/nfs "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.0/24"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("修改权限")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" -R /root/data/nfs\n")])])])]),t._v(" "),a("li",[a("p",[t._v("加载配置")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("exportfs -r\n")])])])]),t._v(" "),a("li",[a("p",[t._v("启动 NFS 服务")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl start rpcbind\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" rpcbind\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl start nfs\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" nfs\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在 k8s-master 节点上测试是否挂载成功")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# showmount -e 172.16.58.200")]),t._v("\nExport list "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.200:\n/root/data/nfs "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.0/24\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在 k8s-node1 和 k8s-node2 都安装 NFS 服务器，目前是为了 Node 节点可以驱动 NFS 服务器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Node节点上安装NFS服务，不需要启动")]),t._v("\nyum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nfs-utils\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在 k8s-node1 和 k8s-node2 测试是否挂载成功")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("showmount -e "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.200\n")])])])]),t._v(" "),a("li",[a("p",[t._v("高可用备份方式，在所有节点执行如下的命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),t._v(" -t  nfs "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.200:/root/data/nfs /mnt\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_3-2-创建-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-创建-pod"}},[t._v("#")]),t._v(" 3.2 创建 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("volume-nfs.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nfs\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将logs-volume挂载到nginx容器中对应的目录，该目录为/var/log/nginx")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log/nginx\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tail -f /logs/error.log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始命令，动态读取指定文件的内容变化")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将logs-volume挂载到busybox容器中的对应父母，该目录为/logs")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /logs\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明volume，name为logs-volume，类型为emptyDir")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.16.58.200 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#NFS服务器地址")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/nfs "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享文件路径")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f volume-nfs.yaml ")]),t._v("\npod/volume-nfs created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod volume-nfs -o wide")]),t._v("\nNAME         READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\nvolume-nfs   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          6s    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.45   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_3-3-访问-pod-中的-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-访问-pod-中的-nginx"}},[t._v("#")]),t._v(" 3.3 访问 pod 中的 nginx")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.45\n")])])]),a("h4",{attrs:{id:"_3-4-查看-nfs-服务器上的共享目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-查看-nfs-服务器上的共享目录"}},[t._v("#")]),t._v(" 3.4 查看 nfs 服务器上的共享目录")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls /root/data/nfs/")]),t._v("\naccess.log  error.log\n")])])]),a("h2",{attrs:{id:"二、高级存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、高级存储"}},[t._v("#")]),t._v(" 二、高级存储")]),t._v(" "),a("p",[t._v("前面我们已经学习了使用 NFS 提供存储，此时就要求用户会搭建 NFS 系统，并且会在 yaml 配置 NFS。")]),t._v(" "),a("p",[t._v("由于 k8s 支持的存储系统有很多，要求客户全部掌握，显然不现实。为了能够屏蔽底层存储实现的细节，方便用户使用，k8s 引入了 "),a("strong",[t._v("PV")]),t._v(" 和 "),a("strong",[t._v("PVC")]),t._v(" 两种资源对象。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("PV（Persistent Volume）")]),t._v(" 是持久化卷的意思，是对底层的共享存储的一种抽象。一般情况下 PV 由 k8s "),a("strong",[t._v("管理员")]),t._v("进行创建和配置，它和底层具体的共享存储技术有关，并通过插件完成和共享存储的对接")]),t._v(" "),a("li",[a("strong",[t._v("PVC（Persistent Volume Claim）")]),t._v(" 是持久化卷声明的意思，是用户对于存储需求的一种声明。换言之，PVC 其实就是"),a("strong",[t._v("用户")]),t._v("向 k8s 系统发出的一种资源需求申请")])]),t._v(" "),a("p",[t._v("使用了 PV 和 PVC 之后，工作可以得到进一步的提升：")]),t._v(" "),a("ul",[a("li",[t._v("存储：存储工程师维护")]),t._v(" "),a("li",[t._v("PV：k8s 管理员维护")]),t._v(" "),a("li",[t._v("PVC：k8s 用户维护")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gse04pva6sj315a0oak4j.jpg",alt:"image-20210712112423723"}})]),t._v(" "),a("h3",{attrs:{id:"_1-pv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-pv"}},[t._v("#")]),t._v(" 1. PV")]),t._v(" "),a("h4",{attrs:{id:"_1-1-pv-资源清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-pv-资源清单"}},[t._v("#")]),t._v(" 1.1 PV 资源清单")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pv2\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储类型，和底层正则的存储对应，NFS/CIFS/GlusterFS")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储能力，目前只支持存储空间的设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2Gi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储类别")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回收策略")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("strong",[t._v("存储类型")])]),t._v(" "),a("p",[t._v("底层实际存储的类型，k8s 支持多种存储类型，每种存储类型的配置有所不同：")]),t._v(" "),a("ul",[a("li",[t._v("NFS")]),t._v(" "),a("li",[t._v("CIFS")]),t._v(" "),a("li",[t._v("ClusterFS")]),t._v(" "),a("li",[t._v("...")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("存储能力（capacity）")])]),t._v(" "),a("p",[t._v("目前只支持存储空间的设置（storage=1Gi），不过未来可能会加入 IOPS、吞吐量等指标的配置")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("访问模式（accessModes）")])]),t._v(" "),a("p",[t._v("用来描述用户应用对存储资源的访问权限，访问权限包括下面几种方式：")]),t._v(" "),a("ul",[a("li",[t._v("ReadWriteOnce（RWO）：读写权限，但是只能被"),a("strong",[t._v("单个节点")]),t._v("挂载")]),t._v(" "),a("li",[t._v("ReadOnlyMany（ROX）：只读权限，可以被多个节点挂载")]),t._v(" "),a("li",[t._v("ReadWriteMany（RWX）：读写权限，可以被多个节点挂载")])]),t._v(" "),a("p",[a("font",{attrs:{color:"orange"}},[t._v("需要注意的是，底层不同的存储类型可能支持的访问模式不同。")])],1)]),t._v(" "),a("li",[a("p",[a("strong",[t._v("回收策略（ persistentVolumeReclaimPolicy）")])]),t._v(" "),a("p",[t._v("当 PV 不再被使用之后，对其的处理方式，目前支持三种策略：")]),t._v(" "),a("ul",[a("li",[t._v("Retain（保留）：保留数据，需要管理员手动清理数据")]),t._v(" "),a("li",[t._v("Recycle（回收）：清除 PV 中的数据，效果相当于"),a("code",[t._v("rm -rf /volume/*")])]),t._v(" "),a("li",[t._v("Delete（删除）：和 PV 相连的后端存储完成 volume 的删除操作，常见于云服务器厂商的存储服务")])]),t._v(" "),a("p",[a("font",{attrs:{color:"orange"}},[t._v("需要注意的是，底层不同的存储类型可能支持的回收策略不同。")])],1)]),t._v(" "),a("li",[a("p",[a("strong",[t._v("存储类别（storageClassName）")])]),t._v(" "),a("p",[t._v("PV 可以通过 "),a("code",[t._v("storageClassName")]),t._v(" 参数指定一个存储类别：")]),t._v(" "),a("ul",[a("li",[t._v("具有特定类型的 PV 只能和请求了该类别的 PVC 进行绑定")]),t._v(" "),a("li",[t._v("未设定类别的 PV 只能和不请求任何类别的 PVC 进行绑定")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("状态（status）")])]),t._v(" "),a("p",[t._v("一个 PV 的生命周期，可能会处于 4 种不同的阶段：")]),t._v(" "),a("ul",[a("li",[t._v("Available（可用）：表示可用状态，还未被任何 PVC 绑定")]),t._v(" "),a("li",[t._v("Bound（已绑定）：表示PV已经被 PVC 绑定")]),t._v(" "),a("li",[t._v("Released（已释放）：表示 PVC 被删除，但是资源还没有被集群重新释放")]),t._v(" "),a("li",[t._v("Failed（失败）：表示该 PV 的自动回收失败")])])])]),t._v(" "),a("h4",{attrs:{id:"_1-2-准备-nfs-环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-准备-nfs-环境"}},[t._v("#")]),t._v(" 1.2 准备 NFS 环境")]),t._v(" "),a("blockquote",[a("p",[t._v("为了方便，就直接在 k8s-master 上搭建了。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建共享目录")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -pv /root/data/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("pv1,pv2,pv3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("授权共享目录的读写权限")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" -R /root/data\n")])])])]),t._v(" "),a("li",[a("p",[t._v("修改 /etc/exports，将共享目录以读写权限暴露给"),a("code",[t._v("172.16.58.0/24")]),t._v("网段中的所有主机")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim /etc/exports")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /etc/exports")]),t._v("\n/root/data/nfs "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.0/24"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加以下内容")]),t._v("\n/root/data/pv1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.0/24"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/root/data/pv2 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.0/24"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/root/data/pv3 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".58.0/24"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("重启 NFS 服务")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl restart nfs\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_1-3-创建-pv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-创建-pv"}},[t._v("#")]),t._v(" 1.3 创建 PV")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("pv.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pv1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储类型，和底层支持的存储对应")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv1\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.16.58.200\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回收策略")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pv2\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储类型，和底层支持的存储对应")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv2\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.16.58.200\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2Gi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回收策略")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pv3\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储类型，和底层支持的存储对应")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv3\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.16.58.200\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3Gi\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回收策略")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 PV")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pv.yaml ")]),t._v("\npersistentvolume/pv1 created\npersistentvolume/pv2 created\npersistentvolume/pv3 created\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_1-4-查看-pv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-查看-pv"}},[t._v("#")]),t._v(" 1.4 查看 PV")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pv -o wide")]),t._v("\nNAME   CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE   VOLUMEMODE\npv1    1Gi        RWX            Retain           Available                                   31s   Filesystem\npv2    2Gi        RWX            Retain           Available                                   31s   Filesystem\npv3    3Gi        RWX            Retain           Available                                   31s   Filesystem\n")])])]),a("h3",{attrs:{id:"_2-pvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pvc"}},[t._v("#")]),t._v(" 2. PVC")]),t._v(" "),a("h4",{attrs:{id:"_2-1-pvc-资源清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-pvc-资源清单"}},[t._v("#")]),t._v(" 2.1 PVC 资源清单")]),t._v(" "),a("p",[t._v("PVC 是资源的申请，用来声明对存储空间、访问模式、存储类别需求信息，下面是 PVC 的资源清单文件：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访客模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#采用标签对PV选择")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储类别")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求空间")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n")])])]),a("ul",[a("li",[a("p",[a("strong",[t._v("访客模式（accessModes）")]),t._v("：用于描述用户应用对存储资源的访问权限")])]),t._v(" "),a("li",[a("p",[t._v("用于描述用户应用对存储资源的访问权限：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("选择条件（selector）")]),t._v("：通过 Label Selector 的设置，可使 PVC 对于系统中已存在的 PV 进行筛选")]),t._v(" "),a("li",[a("strong",[t._v("存储类别（storageClassName）")]),t._v("：PVC 在定义时可以设定需要的后端存储的类别，只有设置了该 class 的 PV 才能被系统选出")]),t._v(" "),a("li",[a("strong",[t._v("资源请求（resources）")]),t._v("：描述对存储资源的请求")])])])]),t._v(" "),a("h4",{attrs:{id:"_2-2-创建-pvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-创建-pvc"}},[t._v("#")]),t._v(" 2.2 创建 PVC")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编写 "),a("code",[t._v("pvc.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访客模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源要求")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc2\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访客模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源要求")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc3\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访客模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源要求")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 PVC")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pvc.yaml ")]),t._v("\npersistentvolumeclaim/pvc1 created\npersistentvolumeclaim/pvc2 created\npersistentvolumeclaim/pvc3 created\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-3-查看-pvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-查看-pvc"}},[t._v("#")]),t._v(" 2.3 查看 PVC")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pvc")]),t._v("\nNAME   STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE\npvc1   Bound     pv1      1Gi        RWX                           41s\npvc2   Bound     pv2      2Gi        RWX                           41s\npvc3   Pending                                                     41s\n")])])]),a("p",[t._v("会发现 "),a("code",[t._v("pvc3")]),t._v(" 由于请求的资源（5Gi）大于目前所有提供资源的 PV，所以没法为 pvc3 分配 PV。")]),t._v(" "),a("h4",{attrs:{id:"_2-4-查看-pv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-查看-pv"}},[t._v("#")]),t._v(" 2.4 查看 PV")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pv")]),t._v("\nNAME   CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM          STORAGECLASS   REASON   AGE\npv1    1Gi        RWX            Retain           Bound       default/pvc1                           7m29s\npv2    2Gi        RWX            Retain           Bound       default/pvc2                           7m29s\npv3    3Gi        RWX            Retain           Available                                          7m29s\n")])])]),a("p",[t._v("可以看到 pv1 和 pv2 都已经被分配了，pv3 还没有被分配。")]),t._v(" "),a("h4",{attrs:{id:"_2-5-创建-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-创建-pod"}},[t._v("#")]),t._v(" 2.5 创建 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("code",[t._v("pvc-pod.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"while true; do echo pvc-pod1 >> /root/out.txt; sleep 10; done;"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc1\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod2\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"while true; do echo pvc-pod2 >> /root/out.txt; sleep 10; done;"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc2\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pvc-pod.yaml ")]),t._v("\npod/pvc-pod1 created\npod/pvc-pod2 created\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pvc-pod1 -o wide")]),t._v("\nNAME       READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npvc-pod1   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          7s    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".3.21   k8s-node2   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pvc-pod2 -o wide")]),t._v("\nNAME       READY   STATUS    RESTARTS   AGE   IP            NODE        NOMINATED NODE   READINESS GATES\npvc-pod2   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          17s   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.46   k8s-node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-6-查看-pvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-查看-pvc"}},[t._v("#")]),t._v(" 2.6 查看 PVC")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pvc")]),t._v("\nNAME   STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE\npvc1   Bound     pv1      1Gi        RWX                           9m25s\npvc2   Bound     pv2      2Gi        RWX                           9m25s\npvc3   Pending                                                     9m25s\n")])])]),a("h4",{attrs:{id:"_2-7-查看-pv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-查看-pv"}},[t._v("#")]),t._v(" 2.7 查看 PV")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pv")]),t._v("\nNAME   CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM          STORAGECLASS   REASON   AGE\npv1    1Gi        RWX            Retain           Bound       default/pvc1                           15m\npv2    2Gi        RWX            Retain           Bound       default/pvc2                           15m\npv3    3Gi        RWX            Retain           Available                                          15m\n")])])]),a("h4",{attrs:{id:"_2-8-查看-nfs-中的文件存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-查看-nfs-中的文件存储"}},[t._v("#")]),t._v(" 2.8 查看 NFS 中的文件存储")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /root/data/pv1/out.txt ")]),t._v("\npvc-pod1\npvc-pod1\npvc-pod1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master volume"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /root/data/pv2/out.txt ")]),t._v("\npvc-pod2\npvc-pod2\npvc-pod2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("h3",{attrs:{id:"_3-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-生命周期"}},[t._v("#")]),t._v(" 3. 生命周期")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gse19s6j48j31q00rsama.jpg",alt:"image-20210712120351532"}})]),t._v(" "),a("p",[t._v("PVC 和 PV 是一一对应的，PV 和 PVC 之间的相互作用遵循如下的生命周期：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("资源供应")])]),t._v(" "),a("p",[t._v("管理员手动创建底层存储和 PV。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("资源绑定")])]),t._v(" "),a("ul",[a("li",[t._v("用户创建 PVC，k8s 负责根据 PVC 声明去寻找 PV，并绑定在用户定义好 PVC 之后，系统将根据 PVC 对存储资源的请求在以存在的 PV 中选择一个满足条件的。\n"),a("ul",[a("li",[t._v("一旦找到，就将该 PV 和用户定义的 PVC 进行绑定，用户的应用就可以使用这个 PVC 了，PV 一旦绑定到某个 PVC 上，就会被这个 PVC 独占，不能再和其他的 PVC 进行绑定了")]),t._v(" "),a("li",[t._v("如果找不到，PVC 就会无限期的处于 Pending 状态，直到系统管理员创建一个符合其要求的PV")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("资源使用")])]),t._v(" "),a("p",[t._v("用户可以在 Pod 中像 volume 一样使用 PVC，Pod 使用 Volume 的定义，将 PVC 挂载到容器内的某个路径进行使用。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("资源释放")])]),t._v(" "),a("p",[t._v("用户删除 PVC 来释放 PV。")]),t._v(" "),a("blockquote",[a("p",[t._v("当存储资源使用完毕后，用户可以删除 PVC，和该 PVC 绑定的 PV 将会标记为“"),a("strong",[t._v("已释放")]),t._v("”，但是还不能立刻和其他的 PVC 进行绑定。通过之前 PVC 写入的数据可能还留在存储设备上，只有在清除之后该 PV 才能再次使用。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("资源回收")])]),t._v(" "),a("p",[t._v("k8s 根据 PV 设置的回收策略进行资源的回收。")]),t._v(" "),a("blockquote",[a("p",[t._v("对于 PV，管理员可以设定回收策略，用于设置与之绑定的 PVC 释放资源之后如何处理遗留数据的问题。只有 PV 的存储空间完成回收，才能供新的 PVC 绑定和使用。")])])])]),t._v(" "),a("h2",{attrs:{id:"三、配置存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、配置存储"}},[t._v("#")]),t._v(" 三、配置存储")]),t._v(" "),a("h3",{attrs:{id:"_1-configmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-configmap"}},[t._v("#")]),t._v(" 1. ConfigMap")]),t._v(" "),a("p",[t._v("ConfigMap 是一种比较特殊的存储卷，它的主要作用是用来"),a("strong",[t._v("存储配置信息")]),t._v("的。")]),t._v(" "),a("h4",{attrs:{id:"_1-1-configmap-资源清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-configmap-资源清单"}},[t._v("#")]),t._v(" 1.1 ConfigMap 资源清单")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ConfigMap\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" configMap\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <map[string]string>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin\n  \t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-2-创建-configmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-创建-configmap"}},[t._v("#")]),t._v(" 1.2 创建 ConfigMap")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编写 "),a("code",[t._v("configmap.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ConfigMap\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" configmap\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("admin\n    password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 ConfigMap")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f configmap.yaml\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_1-3-创建-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-创建-pod"}},[t._v("#")]),t._v(" 1.3 创建 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编写 "),a("code",[t._v("pod-configmap.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("configmap\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /configmap/config\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" configmap\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f pod-configmap.yaml\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get pod pod-configmap -n dev\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_1-4-查看配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-查看配置"}},[t._v("#")]),t._v(" 1.4 查看配置")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("进入容器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it pod-configmap -n dev /bin/sh\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看配置")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /configmap/config\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" info\n")])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("ConfigMap 中的 key 映射为一个文件，value 映射为文件中的内容。如果更新了 ConfigMap 中的内容，容器中的值也会动态更新。")])]),t._v(" "),a("h3",{attrs:{id:"_2-secret"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-secret"}},[t._v("#")]),t._v(" 2. Secret")]),t._v(" "),a("p",[t._v("在 k8s 中，还存在一种和 ConfigMap 非常类似的对象，称为 Secret 对象，它主要用来存储敏感信息，例如密码、密钥、证书等等。")]),t._v(" "),a("h4",{attrs:{id:"_2-1-secret-资源清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-secret-资源清单"}},[t._v("#")]),t._v(" 2.1 Secret 资源清单")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Opaque "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Secret 类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#加密数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YWRtaW4= \n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MTIzNDU2\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stringData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#明文数据，stringData会覆盖data")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#会被自动加密，默认 base64")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("type")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("内置类型")]),t._v(" "),a("th",[t._v("用法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("Opaque")])]),t._v(" "),a("td",[t._v("用户定义的任意数据")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("kubernetes.io/service-account-token")])]),t._v(" "),a("td",[t._v("服务账号令牌")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("kubernetes.io/dockercfg")])]),t._v(" "),a("td",[a("code",[t._v("~/.dockercfg")]),t._v(" 文件的序列化形式")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("kubernetes.io/dockerconfigjson")])]),t._v(" "),a("td",[a("code",[t._v("~/.docker/config.json")]),t._v(" 文件的序列化形式")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("kubernetes.io/basic-auth")])]),t._v(" "),a("td",[t._v("用于基本身份认证的凭据")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("kubernetes.io/ssh-auth")])]),t._v(" "),a("td",[t._v("用于 SSH 身份认证的凭据")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("kubernetes.io/tls")])]),t._v(" "),a("td",[t._v("用于 TLS 客户端或者服务器端的数据")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bootstrap.kubernetes.io/token")])]),t._v(" "),a("td",[t._v("启动引导令牌数据")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Opaque Secret")]),t._v(" "),a("p",[t._v("当 Secret 配置文件中未作显式设定时，默认的 Secret 类型是 "),a("code",[t._v("Opaque")]),t._v("。 当你使用 "),a("code",[t._v("kubectl")]),t._v(" 来创建一个 Secret 时，你会使用 "),a("code",[t._v("generic")]),t._v(" 子命令来标明 要创建的是一个 "),a("code",[t._v("Opaque")]),t._v(" 类型 Secret。 例如，下面的命令会创建一个空的 "),a("code",[t._v("Opaque")]),t._v(" 类型 Secret 对象：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create secret generic empty-secret")]),t._v("\nsecret/empty-secret created\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get secret empty-secret")]),t._v("\nNAME           TYPE     DATA   AGE\nempty-secret   Opaque   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      8s\n")])])]),a("p",[a("code",[t._v("DATA")]),t._v(" 列显示 Secret 中保存的数据条目个数。 在这个例子种，"),a("code",[t._v("0")]),t._v(" 意味着我们刚刚创建了一个空的 Secret。")])]),t._v(" "),a("li",[a("p",[t._v("服务账号令牌 Secret")]),t._v(" "),a("p",[t._v("类型为 "),a("code",[t._v("kubernetes.io/service-account-token")]),t._v(" 的 Secret 用来存放标识某 服务账号的令牌。使用这种 Secret 类型时，你需要确保对象的注解 "),a("code",[t._v("kubernetes.io/service-account-name")]),t._v(" 被设置为某个已有的服务账号名称。 某个 Kubernetes 控制器会填写 Secret 的其它字段，例如 "),a("code",[t._v("kubernetes.io/service-account.uid")]),t._v(" 注解以及 "),a("code",[t._v("data")]),t._v(" 字段中的 "),a("code",[t._v("token")]),t._v(" 键值，使之包含实际的令牌内容。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sample\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetes.io/service-account.name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sa-name"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("token\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你可以像 Opaque Secret 一样在这里添加额外的键/值偶对")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YmFyCg==\n")])])]),a("p",[t._v("Kubernetes 在创建 Pod 时会自动创建一个服务账号 Secret 并自动修改你的 Pod 以使用该 Secret。该服务账号令牌 Secret 中包含了访问 Kubernetes API 所需要的凭据")])]),t._v(" "),a("li",[a("p",[t._v("Docker 配置 Secret")]),t._v(" "),a("p",[t._v("你可以使用下面两种 "),a("code",[t._v("type")]),t._v(" 值之一来创建 Secret，用以存放访问 Docker 仓库 来下载镜像的凭据。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("kubernetes.io/dockercfg")])]),t._v(" "),a("li",[a("code",[t._v("kubernetes.io/dockerconfigjson")])])]),t._v(" "),a("p",[a("code",[t._v("kubernetes.io/dockercfg")]),t._v(" 是一种保留类型，用来存放 "),a("code",[t._v("~/.dockercfg")]),t._v(" 文件的 序列化形式。该文件是配置 Docker 命令行的一种老旧形式。 使用此 Secret 类型时，你需要确保 Secret 的 "),a("code",[t._v("data")]),t._v(" 字段中包含名为 "),a("code",[t._v(".dockercfg")]),t._v(" 的主键，其对应键值是用 base64 编码的某 "),a("code",[t._v("~/.dockercfg")]),t._v(" 文件的内容。")]),t._v(" "),a("p",[t._v("类型 "),a("code",[t._v("kubernetes.io/dockerconfigjson")]),t._v(" 被设计用来保存 JSON 数据的序列化形式， 该 JSON 也遵从 "),a("code",[t._v("~/.docker/config.json")]),t._v(" 文件的格式规则，而后者是 "),a("code",[t._v("~/.dockercfg")]),t._v(" 的新版本格式。 使用此 Secret 类型时，Secret 对象的 "),a("code",[t._v("data")]),t._v(" 字段必须包含 "),a("code",[t._v(".dockerconfigjson")]),t._v(" 键，其键值为 base64 编码的字符串包含 "),a("code",[t._v("~/.docker/config.json")]),t._v(" 文件的内容。")]),t._v(" "),a("p",[t._v("下面是一个 "),a("code",[t._v("kubernetes.io/dockercfg")]),t._v(" 类型 Secret 的示例：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dockercfg\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/dockercfg\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(".dockercfg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n        "<base64 encoded ~/.dockercfg file>"')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("基本身份认证 Secret")]),t._v(" "),a("p",[a("code",[t._v("kubernetes.io/basic-auth")]),t._v(" 类型用来存放用于基本身份认证所需的凭据信息。 使用这种 Secret 类型时，Secret 的 "),a("code",[t._v("data")]),t._v(" 字段必须包含以下两个键：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("username")]),t._v(": 用于身份认证的用户名；")]),t._v(" "),a("li",[a("code",[t._v("password")]),t._v(": 用于身份认证的密码或令牌。")])]),t._v(" "),a("p",[t._v("以上两个键的键值都是 base64 编码的字符串。 当然你也可以在创建 Secret 时使用 "),a("code",[t._v("stringData")]),t._v(" 字段来提供明文形式的内容。 下面的 YAML 是基本身份认证 Secret 的一个示例清单：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("basic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("auth\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/basic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("auth\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stringData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" t0p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Secret\n")])])]),a("p",[t._v("提供基本身份认证类型的 Secret 仅仅是出于用户方便性考虑。 你也可以使用 "),a("code",[t._v("Opaque")]),t._v(" 类型来保存用于基本身份认证的凭据。 不过，使用内置的 Secret 类型的有助于对凭据格式进行归一化处理，并且 API 服务器确实会检查 Secret 配置中是否提供了所需要的主键。")])]),t._v(" "),a("li",[a("p",[t._v("SSH 身份认证 Secret")]),t._v(" "),a("p",[t._v("Kubernetes 所提供的内置类型 "),a("code",[t._v("kubernetes.io/ssh-auth")]),t._v(" 用来存放 SSH 身份认证中 所需要的凭据。使用这种 Secret 类型时，你就必须在其 "),a("code",[t._v("data")]),t._v(" （或 "),a("code",[t._v("stringData")]),t._v("） 字段中提供一个 "),a("code",[t._v("ssh-privatekey")]),t._v(" 键值对，作为要使用的 SSH 凭据。")]),t._v(" "),a("p",[t._v("下面的 YAML 是一个 SSH 身份认证 Secret 的配置示例：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ssh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("auth\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/ssh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("auth\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此例中的实际数据被截断")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ssh-privatekey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          MIIEpQIBAAKCAQEAulqb/Y ..")]),t._v("\n")])])]),a("p",[t._v("提供 SSH 身份认证类型的 Secret 仅仅是出于用户方便性考虑。 你也可以使用 "),a("code",[t._v("Opaque")]),t._v(" 类型来保存用于 SSH 身份认证的凭据。 不过，使用内置的 Secret 类型的有助于对凭据格式进行归一化处理，并且 API 服务器确实会检查 Secret 配置中是否提供了所需要的主键。")])]),t._v(" "),a("li",[a("p",[t._v("TLS Secret")]),t._v(" "),a("p",[t._v("Kubernetes 提供一种内置的 "),a("code",[t._v("kubernetes.io/tls")]),t._v(" Secret 类型，用来存放证书 及其相关密钥（通常用在 TLS 场合）。 此类数据主要提供给 Ingress 资源，用以终结 TLS 链接，不过也可以用于其他 资源或者负载。当使用此类型的 Secret 时，Secret 配置中的 "),a("code",[t._v("data")]),t._v(" （或 "),a("code",[t._v("stringData")]),t._v("）字段必须包含 "),a("code",[t._v("tls.key")]),t._v(" 和 "),a("code",[t._v("tls.crt")]),t._v(" 主键，尽管 API 服务器 实际上并不会对每个键的取值作进一步的合法性检查。")]),t._v(" "),a("p",[t._v("下面的 YAML 包含一个 TLS Secret 的配置示例：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tls\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/tls\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此例中的数据被截断")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls.crt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n        MIIC2DCCAcCgAwIBAgIBATANBgkqh ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls.key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n        MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ ...")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("启动引导令牌 Secret")]),t._v(" "),a("p",[t._v("通过将 Secret 的 "),a("code",[t._v("type")]),t._v(" 设置为 "),a("code",[t._v("bootstrap.kubernetes.io/token")]),t._v(" 可以创建 启动引导令牌类型的 Secret。这种类型的 Secret 被设计用来支持节点的启动引导过程。 其中包含用来为周知的 ConfigMap 签名的令牌。")]),t._v(" "),a("p",[t._v("启动引导令牌 Secret 通常创建于 "),a("code",[t._v("kube-system")]),t._v(" 名字空间内，并以 "),a("code",[t._v("bootstrap-token-<令牌 ID>")]),t._v(" 的形式命名；其中 "),a("code",[t._v("<令牌 ID>")]),t._v(" 是一个由 6 个字符组成 的字符串，用作令牌的标识。")]),t._v(" "),a("p",[t._v("以 Kubernetes 清单文件的形式，某启动引导令牌 Secret 可能看起来像下面这样：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bootstrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("5emitj\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("system\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bootstrap.kubernetes.io/token\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("auth-extra-groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" c3lzdGVtOmJvb3RzdHJhcHBlcnM6a3ViZWFkbTpkZWZhdWx0LW5vZGUtdG9rZW4=\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expiration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MjAyMC0wOS0xM1QwNDozOToxMFo=\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token-id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NWVtaXRq\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token-secret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a3E0Z2lodnN6emduMXAwcg==\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usage-bootstrap-authentication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dHJ1ZQ==\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usage-bootstrap-signing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dHJ1ZQ==\n")])])]),a("p",[t._v("启动引导令牌类型的 Secret 会在 "),a("code",[t._v("data")]),t._v(" 字段中包含如下主键：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("token-id")]),t._v("：由 6 个随机字符组成的字符串，作为令牌的标识符。必需。")]),t._v(" "),a("li",[a("code",[t._v("token-secret")]),t._v("：由 16 个随机字符组成的字符串，包含实际的令牌机密。必需。")]),t._v(" "),a("li",[a("code",[t._v("description")]),t._v("：供用户阅读的字符串，描述令牌的用途。可选。")]),t._v(" "),a("li",[a("code",[t._v("expiration")]),t._v("：一个使用 RFC3339 来编码的 UTC 绝对时间，给出令牌要过期的时间。可选。")]),t._v(" "),a("li",[a("code",[t._v("usage-bootstrap-<usage>")]),t._v("：布尔类型的标志，用来标明启动引导令牌的其他用途。")]),t._v(" "),a("li",[a("code",[t._v("auth-extra-groups")]),t._v("：用逗号分隔的组名列表，身份认证时除被认证为 "),a("code",[t._v("system:bootstrappers")]),t._v(" 组之外，还会被添加到所列的用户组中。")])]),t._v(" "),a("p",[t._v("上面的 YAML 文件可能看起来令人费解，因为其中的数值均为 base64 编码的字符串。 实际上，你完全可以使用下面的 YAML 来创建一个一模一样的 Secret：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意 Secret 的命名方式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bootstrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("5emitj\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动引导令牌 Secret 通常位于 kube-system 名字空间")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("system\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bootstrap.kubernetes.io/token\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stringData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("auth-extra-groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system:bootstrappers:kubeadm:default-node-token"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expiration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-13T04:39:10Z"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此令牌 ID 被用于生成 Secret 名称")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token-id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5emitj"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token-secret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kq4gihvszzgn1p0r"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此令牌还可用于 authentication （身份认证）")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usage-bootstrap-authentication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 且可用于 signing （证书签名）")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usage-bootstrap-signing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n")])])])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-2-使用-base64-对数据进行编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-使用-base64-对数据进行编码"}},[t._v("#")]),t._v(" 2.2 使用 base64 对数据进行编码")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("加密 username")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# echo -n "admin" | base64')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("YWRtaW4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("加密 password")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# echo -n "123456" | base64')]),t._v("\nMTIzNDU2\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-3-创建-secret"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-创建-secret"}},[t._v("#")]),t._v(" 2.3 创建 Secret")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编写 "),a("code",[t._v("secret.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Opaque\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YWRtaW4=\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MTIzNDU2\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Secret")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f secret.yaml\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-4-自动编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-自动编码"}},[t._v("#")]),t._v(" 2.4 自动编码")]),t._v(" "),a("ul",[a("li",[t._v("上面的方式是先手动将数据进行编码，其实也可以使用直接编写数据，将数据编码交给 k8s。")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Opaque\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stringData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("如果同时使用 data 和 stringData，那么 data 会被忽略。")])]),t._v(" "),a("h4",{attrs:{id:"_2-5-查看-secret"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-查看-secret"}},[t._v("#")]),t._v(" 2.5 查看 Secret")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get secret secret -n dev")]),t._v("\nNAME     TYPE     DATA   AGE\nsecret   Opaque   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("      73s\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe secret secret -n dev")]),t._v("\nName:         secret\nNamespace:    dev\nLabels:       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nAnnotations:  \nType:         Opaque\n\nData\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nusername:  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" bytes\npassword:  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" bytes\n")])])]),a("h4",{attrs:{id:"_2-6-创建-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-创建-pod"}},[t._v("#")]),t._v(" 2.6 创建 Pod")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编写 "),a("code",[t._v("pod-secret.yaml")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /secret/config\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secretName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl apply -f pod-secret.yaml \n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看 Pod")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get pod pod-secret -n dev\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-7-进入-pod-查看配置信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-进入-pod-查看配置信息"}},[t._v("#")]),t._v(" 2.7 进入 Pod 查看配置信息")]),t._v(" "),a("ul",[a("li",[t._v("进入容器，查看 Secret 信息，发现已经自动解码了")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec -it pod-secret -n dev /bin/sh")]),t._v("\nkubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" is DEPRECATED and will be removed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" a future version. Use kubectl kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -- "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" instead.\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls /secret/config")]),t._v("\npassword  username\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /secret/config/username")]),t._v("\nadmin\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /secret/config/password")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-8-secret-用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-secret-用途"}},[t._v("#")]),t._v(" 2.8 Secret 用途")]),t._v(" "),a("p",[t._v("imagePullSecret：Pod 拉取私有镜像仓库的时使用的账户密码，会传递给 kubelet，然后 kubelet 就可以拉取有密码的仓库里面的镜像。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create secret docker-registry docker-harbor-registrykey --docker-server"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("IP:PORT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n          --docker-username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("username --docker-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("password "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n          --docker-email"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxxxx@qq.com\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);