(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{422:function(t,e,a){"use strict";a.r(e);var o=a(47),n=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"golang-异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#golang-异常处理"}},[t._v("#")]),t._v(" Golang 异常处理")]),t._v(" "),a("p",[t._v("在实际工程项目中，我们希望通过程序的错误信息快速定位问题，但是又不喜欢错误处理代码写的冗余而又啰嗦。"),a("code",[t._v("Go")]),t._v("语言没有提供像 "),a("code",[t._v("Java")]),t._v("、"),a("code",[t._v("C#")]),t._v("语言中的 "),a("code",[t._v("try...catch")]),t._v(" 异常处理方式，而是通过函数返回值逐层往上抛。")]),t._v(" "),a("p",[t._v("这种设计，鼓励工程师在代码中显式的检查错误，而非忽略错误，好处就是避免漏掉本应处理的错误。但是带来一个弊端，让代码啰嗦。")])])}),[],!1,null,null,null);e.default=n.exports}}]);