(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{381:function(e,n,t){"use strict";t.r(n);var a=t(44),l=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deployment"}},[e._v("#")]),e._v(" Deployment")]),e._v(" "),t("p",[e._v("一个 "),t("em",[e._v("Deployment")]),e._v(" 为 Pod 和 ReplicaSet 提供声明式的更新能力。")]),e._v(" "),t("p",[e._v("你负责描述 Deployment 中的 "),t("strong",[e._v("目标状态")]),e._v("，而 Deployment 控制器（Controller）以受控速率更改实际状态， 使其变为期望状态。你可以定义 Deployment 以创建新的 ReplicaSet，或删除现有 Deployment， 并通过新的 Deployment 收养其资源。")]),e._v(" "),t("h2",{attrs:{id:"一、创建-deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、创建-deployment"}},[e._v("#")]),e._v(" 一、创建 Deployment")]),e._v(" "),t("p",[e._v("下面是 Deployment 示例。其中创建了一个 ReplicaSet，负责启动三个 "),t("code",[e._v("nginx")]),e._v(" Pods：")]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" apps/v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Deployment\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("deployment\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("replicas")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("matchLabels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("1.14.2\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v("\n")])])]),t("p",[e._v("在该例中：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("创建名为 "),t("code",[e._v("nginx-deployment")]),e._v("（由 "),t("code",[e._v(".metadata.name")]),e._v(" 字段标明）的 Deployment。")])]),e._v(" "),t("li",[t("p",[e._v("该 Deployment 创建三个（由 "),t("code",[e._v("replicas")]),e._v(" 字段标明）Pod 副本。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("selector")]),e._v(" 字段定义 Deployment 如何查找要管理的 Pods。 在这里，你选择在 Pod 模板中定义的标签（"),t("code",[e._v("app: nginx")]),e._v("）。 不过，更复杂的选择规则是也可能的，只要 Pod 模板本身满足所给规则即可。")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("说明：")])]),e._v(" "),t("p",[t("code",[e._v("spec.selector.matchLabels")]),e._v(" 字段是 "),t("code",[e._v("{key,value}")]),e._v(" 键值对映射。 在 "),t("code",[e._v("matchLabels")]),e._v(" 映射中的每个 "),t("code",[e._v("{key,value}")]),e._v(" 映射等效于 "),t("code",[e._v("matchExpressions")]),e._v(" 中的一个元素， 即其 "),t("code",[e._v("key")]),e._v(" 字段是 “key”，"),t("code",[e._v("operator")]),e._v(" 为 “In”，"),t("code",[e._v("values")]),e._v(" 数组仅包含 “value”。 在 "),t("code",[e._v("matchLabels")]),e._v(" 和 "),t("code",[e._v("matchExpressions")]),e._v(" 中给出的所有条件都必须满足才能匹配。")])])])]),e._v(" "),t("p",[e._v("字段包含以下子字段：")]),e._v(" "),t("ul",[t("li",[e._v("Pod 被使用 "),t("code",[e._v("labels")]),e._v(" 字段打上 "),t("code",[e._v("app: nginx")]),e._v(" 标签。")]),e._v(" "),t("li",[e._v("Pod 模板规约（即 "),t("code",[e._v(".template.spec")]),e._v(" 字段）指示 Pods 运行一个 "),t("code",[e._v("nginx")]),e._v(" 容器， 该容器运行版本为 1.14.2 的 "),t("code",[e._v("nginx")]),e._v(" "),t("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Hub"),t("OutboundLink")],1),e._v("镜像。")]),e._v(" "),t("li",[e._v("创建一个容器并使用 "),t("code",[e._v("name")]),e._v(" 字段将其命名为 "),t("code",[e._v("nginx")]),e._v("。")])]),e._v(" "),t("p",[t("strong",[e._v("1. 确保 k8s 已启动")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ kubectl cluster-info\nKubernetes control plane is running at https://kubernetes.docker.internal:6443\nCoreDNS is running at https://kubernetes.docker.internal:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n")])])]),t("p",[e._v("有返回一个链接的话，就说明 k8s 已经启动了。")]),e._v(" "),t("p",[t("strong",[e._v("2. 编写上述 yaml 文件，命名为 nginx-deployment.yaml")])]),e._v(" "),t("p",[t("strong",[e._v("3. 运行以下命令创建 Deployment")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ kubectl apply -f nginx-deployment.yaml\ndeployment.apps/nginx-deployment created\n")])])]),t("p",[t("strong",[e._v("4. 查看当前拥有的 Deployment")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ kubectl get deployments\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           4m\n")])])]),t("p",[e._v("在检查集群中的 Deployment 时，所显示的字段有：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("NAME")]),e._v(" 列出了集群中 Deployment 的名称。")]),e._v(" "),t("li",[t("code",[e._v("READY")]),e._v(" 显示应用程序的可用的 "),t("em",[e._v("副本")]),e._v(" 数。显示的模式是“就绪个数/期望个数”。")]),e._v(" "),t("li",[t("code",[e._v("UP-TO-DATE")]),e._v(" 显示为了达到期望状态已经更新的副本数。")]),e._v(" "),t("li",[t("code",[e._v("AVAILABLE")]),e._v(" 显示应用可供用户使用的副本数。")]),e._v(" "),t("li",[t("code",[e._v("AGE")]),e._v(" 显示应用程序运行的时间。")])]),e._v(" "),t("p",[e._v("请注意期望副本数是根据 "),t("code",[e._v(".spec.replicas")]),e._v(" 字段设置 3。")]),e._v(" "),t("p",[t("strong",[e._v("5. 查看 Deployment 上线状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ kubectl rollout status deployment/nginx-deployment\ndeployment "nginx-deployment" successfully rolled out\n')])])]),t("p",[t("strong",[e._v("6. 查看由 Deployment 创建的 ReplicaSet")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl get rs\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-66b6c48dd5   3         3         3       7m29s\n")])])]),t("p",[e._v("ReplicaSet 输出中包含以下字段：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("NAME")]),e._v(" 列出名字空间中 ReplicaSet 的名称；")]),e._v(" "),t("li",[t("code",[e._v("DESIRED")]),e._v(" 显示应用的期望副本个数，即在创建 Deployment 时所定义的值。 此为期望状态；")]),e._v(" "),t("li",[t("code",[e._v("CURRENT")]),e._v(" 显示当前运行状态中的副本个数；")]),e._v(" "),t("li",[t("code",[e._v("READY")]),e._v(" 显示应用中有多少副本可以为用户提供服务；")]),e._v(" "),t("li",[t("code",[e._v("AGE")]),e._v(" 显示应用已经运行的时间长度。")])]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("注意：")])]),e._v(" "),t("p",[e._v("ReplicaSet 的名称始终被格式化为"),t("code",[e._v("[Deployment名称]-[随机字符串]")]),e._v("。 其中的随机字符串是使用 pod-template-hash 作为种子随机生成的。")])]),e._v(" "),t("p",[t("strong",[e._v("7. 查看每个 Pod 自动生成的标签")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ kubectl get pod --show-labels\nNAME                                READY   STATUS    RESTARTS   AGE     LABELS\nnginx-deployment-66b6c48dd5-98kch   1/1     Running   0          8m24s   app=nginx,pod-template-hash=66b6c48dd5\nnginx-deployment-66b6c48dd5-nzmvs   1/1     Running   0          8m24s   app=nginx,pod-template-hash=66b6c48dd5\nnginx-deployment-66b6c48dd5-wrdt7   1/1     Running   0          8m24s   app=nginx,pod-template-hash=66b6c48dd5\n")])])]),t("blockquote",[t("p",[t("strong",[e._v("注意：")])]),e._v(" "),t("p",[e._v("要避免集群中重复定义 label 。")])]),e._v(" "),t("h2",{attrs:{id:"二、更新-deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、更新-deployment"}},[e._v("#")]),e._v(" 二、更新 Deployment")]),e._v(" "),t("blockquote",[t("p",[e._v("仅当 Deployment Pod 模板（即 "),t("code",[e._v(".spec.template")]),e._v("）发生改变时，例如模板的标签或容器镜像被更新， 才会触发 Deployment 上线。 其他更新（如对 Deployment 执行扩缩容的操作）不会触发上线动作。")])]),e._v(" "),t("p",[t("strong",[e._v("1. 更新 nginx Pod 以使用 "),t("code",[e._v("nginx:1.16.1")]),e._v(" 镜像，而不是 "),t("code",[e._v("nginx:1.14.2")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1 --record\ndeployment.apps/nginx-deployment image updated\n")])])]),t("p",[t("strong",[e._v("2. 查看上线状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ kubectl rollout status deployment/nginx-deployment\ndeployment "nginx-deployment" successfully rolled out\n')])])]),t("p",[t("strong",[e._v("3. 查询 RS 状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl get rs\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-559d658b74   3         3         3       94s\nnginx-deployment-66b6c48dd5   0         0         0       14m\n")])])]),t("p",[e._v("可以看到 Deployment 通过创建新的 ReplicaSet 并将其扩容到 3 个副本并将旧 ReplicaSet 缩容到 0 个副本完成了 Pod 的更新操作。")]),e._v(" "),t("p",[t("strong",[e._v("4. 查看 Pod 状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl get pods\nNAME                                READY   STATUS    RESTARTS   AGE\nnginx-deployment-559d658b74-2wvkr   1/1     Running   0          2m15s\nnginx-deployment-559d658b74-4z4dv   1/1     Running   0          109s\nnginx-deployment-559d658b74-j4dm9   1/1     Running   0          105s\n")])])]),t("p",[e._v("可以看到只显示新的 Pod。")]),e._v(" "),t("p",[e._v("下次要更新这些 Pods 时，只需再次更新 "),t("strong",[e._v("Deployment Pod 模板")]),e._v("即可。")]),e._v(" "),t("p",[e._v("Deployment 可确保在更新时仅关闭一定数量的 Pod。默认情况下，它确保至少所需 Pods "),t("strong",[e._v("75%")]),e._v(" 处于运行状态（最大不可用比例为 25%）。")]),e._v(" "),t("p",[e._v("Deployment 还确保仅所创建 Pod 数量只可能比期望 Pods 数高一点点。 默认情况下，它可确保启动的 Pod 个数比期望个数最多多出 25%（最大峰值 25%）。")]),e._v(" "),t("blockquote",[t("p",[e._v("例如，如果仔细查看上述 Deployment ，将看到它首先创建了一个新的 Pod，然后删除了一些旧的 Pods， 并创建了新的 Pods。它不会杀死老 Pods，直到有足够的数量新的 Pods 已经出现。 在足够数量的旧 Pods 被杀死前并没有创建新 Pods。它确保至少 2 个 Pod 可用，同时最多总共 4 个 Pod 可用。")])]),e._v(" "),t("p",[t("strong",[e._v("5. 查看 Deployment 的详细信息")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ kubectl describe deployment/nginx-deployment\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Thu, 24 Jun 2021 11:19:19 +0800\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision: 2\n                        kubernetes.io/change-cause: kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1 --record=true\nSelector:               app=nginx\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.16.1\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   nginx-deployment-559d658b74 (3/3 replicas created)\nEvents:\n  Type    Reason             Age    From                   Message\n  ----    ------             ----   ----                   -------\n  Normal  ScalingReplicaSet  16m    deployment-controller  Scaled up replica set nginx-deployment-66b6c48dd5 to 3\n  Normal  ScalingReplicaSet  3m57s  deployment-controller  Scaled up replica set nginx-deployment-559d658b74 to 1\n  Normal  ScalingReplicaSet  3m31s  deployment-controller  Scaled down replica set nginx-deployment-66b6c48dd5 to 2\n  Normal  ScalingReplicaSet  3m31s  deployment-controller  Scaled up replica set nginx-deployment-559d658b74 to 2\n  Normal  ScalingReplicaSet  3m27s  deployment-controller  Scaled down replica set nginx-deployment-66b6c48dd5 to 1\n  Normal  ScalingReplicaSet  3m27s  deployment-controller  Scaled up replica set nginx-deployment-559d658b74 to 3\n  Normal  ScalingReplicaSet  3m22s  deployment-controller  Scaled down replica set nginx-deployment-66b6c48dd5 to 0\n")])])]),t("h2",{attrs:{id:"三、回滚-deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、回滚-deployment"}},[e._v("#")]),e._v(" 三、回滚 Deployment")]),e._v(" "),t("blockquote",[t("p",[e._v("Deployment 被触发上线时，系统就会创建 Deployment 的新的修订版本。")]),e._v(" "),t("p",[e._v("这意味着仅当 Deployment 的 Pod 模板（"),t("code",[e._v(".spec.template")]),e._v("）发生更改时，才会创建新修订版本 -- 例如，模板的标签或容器镜像发生变化。")]),e._v(" "),t("p",[e._v("其他更新，如 Deployment 的扩缩容操作不会创建 Deployment 修订版本。")]),e._v(" "),t("p",[e._v("这是为了方便同时执行手动缩放或自动缩放。")]),e._v(" "),t("p",[e._v("换言之，当你回滚到较早的修订版本时，"),t("strong",[e._v("只有 Deployment 的 Pod 模板部分会被回滚")]),e._v("。")])]),e._v(" "),t("p",[t("strong",[e._v("1. 故意错设 nginx 版本为 1.161")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl set image deployment/nginx-deployment nginx=nginx:1.161 --record\ndeployment.apps/nginx-deployment image updated\n")])])]),t("p",[t("strong",[e._v("2. 查看上线状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ deployments % kubectl rollout status deployment/nginx-deployment\nWaiting for deployment "nginx-deployment" rollout to finish: 1 out of 3 new replicas have been updated...\n')])])]),t("p",[e._v("此时会发现上线进程一直处于停滞状态。按 "),t("code",[e._v("Command + C")]),e._v(" 退出。")]),e._v(" "),t("p",[t("strong",[e._v("3. 查看 RS 状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl get rs\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-559d658b74   3         3         3       27m\nnginx-deployment-66b6c48dd5   0         0         0       40m\nnginx-deployment-66bc5d6c8    1         1         0       107s\n")])])]),t("p",[e._v("可以看到旧的副本有两个（"),t("code",[e._v("nginx-deployment-1564180365")]),e._v(" 和 "),t("code",[e._v("nginx-deployment-2035384211")]),e._v("）， 新的副本有 1 个（"),t("code",[e._v("nginx-deployment-3066724191")]),e._v("）。")]),e._v(" "),t("p",[t("strong",[e._v("4. 查看 Pod 状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl get pods\nNAME                                READY   STATUS         RESTARTS   AGE\nnginx-deployment-559d658b74-2wvkr   1/1     Running        0          28m\nnginx-deployment-559d658b74-4z4dv   1/1     Running        0          27m\nnginx-deployment-559d658b74-j4dm9   1/1     Running        0          27m\nnginx-deployment-66bc5d6c8-d94kw    0/1     ErrImagePull   0          2m31s\n")])])]),t("p",[e._v("可以注意到新 ReplicaSet 所创建的 1 个 Pod 卡顿在镜像拉取循环中。")]),e._v(" "),t("blockquote",[t("p",[e._v("Deployment 控制器自动停止有问题的上线过程，并停止对新的 ReplicaSet 扩容。 这行为取决于所指定的 rollingUpdate 参数（具体为 "),t("code",[e._v("maxUnavailable")]),e._v("）。 默认情况下，Kubernetes 将此值设置为 25%。")])]),e._v(" "),t("p",[t("strong",[e._v("5. 查看 Deployment 详细信息")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl describe deployment/nginx-deployment\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Thu, 24 Jun 2021 11:19:19 +0800\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision: 3\n                        kubernetes.io/change-cause: kubectl set image deployment/nginx-deployment nginx=nginx:1.161 --record=true\nSelector:               app=nginx\nReplicas:               3 desired | 1 updated | 4 total | 3 available | 1 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.161\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    ReplicaSetUpdated\nOldReplicaSets:  nginx-deployment-559d658b74 (3/3 replicas created)\nNewReplicaSet:   nginx-deployment-66bc5d6c8 (1/1 replicas created)\nEvents:\n  Type    Reason             Age    From                   Message\n  ----    ------             ----   ----                   -------\n  Normal  ScalingReplicaSet  41m    deployment-controller  Scaled up replica set nginx-deployment-66b6c48dd5 to 3\n  Normal  ScalingReplicaSet  28m    deployment-controller  Scaled up replica set nginx-deployment-559d658b74 to 1\n  Normal  ScalingReplicaSet  28m    deployment-controller  Scaled down replica set nginx-deployment-66b6c48dd5 to 2\n  Normal  ScalingReplicaSet  28m    deployment-controller  Scaled up replica set nginx-deployment-559d658b74 to 2\n  Normal  ScalingReplicaSet  28m    deployment-controller  Scaled down replica set nginx-deployment-66b6c48dd5 to 1\n  Normal  ScalingReplicaSet  28m    deployment-controller  Scaled up replica set nginx-deployment-559d658b74 to 3\n  Normal  ScalingReplicaSet  28m    deployment-controller  Scaled down replica set nginx-deployment-66b6c48dd5 to 0\n  Normal  ScalingReplicaSet  3m22s  deployment-controller  Scaled up replica set nginx-deployment-66bc5d6c8 to 1\n")])])]),t("p",[e._v("可以看到有一个 unavailable 的 ReplicaSet。下面来进行回滚。")]),e._v(" "),t("p",[t("strong",[e._v("6. 检查 Deployment 上线历史")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ deployments % kubectl rollout history deployment/nginx-deployment\ndeployment.apps/nginx-deployment\nREVISION  CHANGE-CAUSE\n1         <none>\n2         kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1 --record=true\n3         kubectl set image deployment/nginx-deployment nginx=nginx:1.161 --record=true\n")])])]),t("h2",{attrs:{id:"四、缩放-deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、缩放-deployment"}},[e._v("#")]),e._v(" 四、缩放 Deployment")]),e._v(" "),t("h2",{attrs:{id:"五、暂停、恢复-deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、暂停、恢复-deployment"}},[e._v("#")]),e._v(" 五、暂停、恢复 Deployment")]),e._v(" "),t("h2",{attrs:{id:"六、deployment-状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、deployment-状态"}},[e._v("#")]),e._v(" 六、Deployment 状态")])])}),[],!1,null,null,null);n.default=l.exports}}]);