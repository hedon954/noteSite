(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{424:function(s,t,a){"use strict";a.r(t);var e=a(47),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"protobuf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#protobuf"}},[s._v("#")]),s._v(" ProtoBuf")]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/protocolbuffers/protobuf",target:"_blank",rel:"noopener noreferrer"}},[s._v("ProtoBuf Github"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developers.google.com/protocol-buffers/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ProtoBuf"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("ProtoBuf（Protocol Buffer）是 Google 的语言中立、平台中立、可扩展的结构化数据序列化机制。类似 XML，但是 ProtoBuf 更小、更快、更简单。一次性定义数据的结构方式，然后可以使用特殊生成的源代码轻松地使用各种语言在各种数据流中写入和读取结构化数据。")]),s._v(" "),a("h2",{attrs:{id:"_1-download"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-download"}},[s._v("#")]),s._v(" 1. Download")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在 Github 在寻找对应版本的 release 进行下载 "),a("code",[s._v("protoc")]),s._v("：https://github.com/protocolbuffers/protobuf/releases")])]),s._v(" "),a("li",[a("p",[s._v("解压")])]),s._v(" "),a("li",[a("p",[s._v("将 "),a("code",[s._v("protoc")]),s._v(" 所在文件夹的 bin 目录配置进环境变量中，如 "),a("code",[s._v("$HOME/protoc-3.19.1/bin")])])]),s._v(" "),a("li",[a("p",[s._v("进入控制台，运行：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("protoc --version\n")])])]),a("p",[s._v("输出类似即表示已经安装完成：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("libprotoc 3.16.1\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"_2-go-protobuf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-go-protobuf"}},[s._v("#")]),s._v(" 2. Go ProtoBuf")]),s._v(" "),a("blockquote",[a("p",[s._v("以下采用 Go 语言为演示代码。")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-定义-proto-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-定义-proto-文件"}},[s._v("#")]),s._v(" 2.1 定义 .proto 文件")]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("syntax")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"proto3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" tutorial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"google/protobuf/timestamp.proto"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("syntax")]),s._v(" 指定当前的 protobuf 语法版本。")]),s._v(" "),a("li",[a("code",[s._v("package")]),s._v(" 是 ProtoBuf 的 package，不是 Go 的package，在后面的 gRPC 中用到。可以理解为定义一个包名，可以避免命名冲突。")]),s._v(" "),a("li",[a("code",[s._v("import")]),s._v(" 表示引入其他的 proto 文件。")])]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("option")]),s._v(" go_package "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"github.com/protocolbuffers/protobuf/examples/go/tutorialpb;tutorialpbForGo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("go_package")]),s._v(" 用来指定生成生成代码的路径即其包名：\n"),a("ul",[a("li",[s._v("github.com/protocolbuffers/protobuf/examples/go/tutorialpb：生成代码的路径")]),s._v(" "),a("li",[s._v("tutorialpbForGo：对应到 Go 中的 package")])])])]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Unique ID number for this person.")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PhoneType")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    MOBILE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    HOME "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    WORK "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PhoneNumber")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[s._v("PhoneType")]),s._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("repeated")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[s._v("PhoneNumber")]),s._v(" phones "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[s._v("google"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("protobuf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Timestamp")]),s._v(" last_updated "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Our address book file is just one of these.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AddressBook")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("repeated")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[s._v("Person")]),s._v(" people "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("message")]),s._v(" 用来定义一个个的消息体，可以理解为一个类型。")]),s._v(" "),a("li",[a("code",[s._v("enum")]),s._v(" 用来定义枚举类型。")]),s._v(" "),a("li",[a("code",[s._v("repeated")]),s._v(" 用来定义复数，生成的 Go 代码会对应到 slice 类型。")]),s._v(" "),a("li",[a("code",[s._v("=1")]),s._v("、"),a("code",[s._v("=2")]),s._v(" 的标志是表示当前字段是该 message 中的第 n 个字段，从 1 开始。")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("零值问题")]),s._v(" "),a("p",[s._v("ProtoBuf 中的所有字段都是可选的（方便新老系统的兼容）；")]),s._v(" "),a("p",[s._v("如果一个值没有设置，那么会默认设置为其的“零值”，故而在命名方面是需要考虑系统兼容性的，比如：")]),s._v(" "),a("ul",[a("li",[s._v("boolean fromNewUser（×）：老系统没有该字段，默认为 false，那么之前的用户数据就都是 Guest 了，不符合；")]),s._v(" "),a("li",[s._v("boolean fromGuest（√）：老系统没有该字段，默认为 false，之前的用户数据都判断为 false，也就是非 Guest，符合。")])])]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloRequest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" ask "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloResponse")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("service")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloService")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rpc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SayHello")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[s._v("service")]),s._v(" 定义一个 RPC 服务")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("rpc")]),s._v(" 定义 RPC 服务中的一个接口，模板为：")]),s._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rpc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MethodName")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])]),s._v(" "),a("h3",{attrs:{id:"_2-2-生成代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-生成代码"}},[s._v("#")]),s._v(" 2.2 生成代码")]),s._v(" "),a("p",[s._v("安装代码生成器 "),a("code",[s._v("protoc-gen-go")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("go "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" google.golang.org/protobuf/cmd/protoc-gen-go@latest\n")])])]),a("p",[s._v("运行下面命令，生成代码：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("protoc -I"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SRC_DIR")]),s._v(" --go_out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DST_DIR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SRC_DIR")]),s._v("/addressbook.proto\n")])])]),a("ul",[a("li",[a("p",[a("code",[s._v("-I")]),s._v(": 指定 $SRC_DIR，也就是输入路径")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("--go_out")]),s._v(": 指定 $DST_DIR，也就是输出路径，有一些可选参数：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("paths=source_relative")]),s._v(": 相对路径")]),s._v(" "),a("li",[a("code",[s._v("plugins")]),s._v(": 指定插件")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("protoc -I"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(". --go_out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("grpc,paths"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("source_relative:gen/go test.proto\n")])])])]),s._v(" "),a("li",[a("p",[s._v("最后的空格后面指定 "),a("code",[s._v(".proto")]),s._v(" 文件")])])]),s._v(" "),a("h3",{attrs:{id:"_2-3-使用代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-使用代码"}},[s._v("#")]),s._v(" 2.3 使用代码")]),s._v(" "),a("p",[s._v("运行生成代码命令后，就可以在 "),a("code",[s._v(".proto")]),s._v(" 中的 "),a("code",[s._v("option go_package")]),s._v(" 中指定的路径中找到生成的代码，就可以使用 ProtoBuf API 了。")]),s._v(" "),a("Vssue")],1)}),[],!1,null,null,null);t.default=r.exports}}]);