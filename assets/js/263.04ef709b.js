(window.webpackJsonp=window.webpackJsonp||[]).push([[263],{674:function(s,a,t){"use strict";t.r(a);var e=t(47),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"kubernetes-集群搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-集群搭建"}},[s._v("#")]),s._v(" Kubernetes 集群搭建")]),s._v(" "),t("h2",{attrs:{id:"_1-环境规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-环境规划"}},[s._v("#")]),s._v(" 1. 环境规划")]),s._v(" "),t("h3",{attrs:{id:"_1-1-集群类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-集群类型"}},[s._v("#")]),s._v(" 1.1 集群类型")]),s._v(" "),t("p",[s._v("Kubernetes集群大致分为两类：一主多从和多主多从。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("一主多从：一个 Master 节点和多台 Node 节点，搭建简单，但是有单机故障风险，适合用于测试环境。")])]),s._v(" "),t("li",[t("p",[s._v("多主多从：多台 Master 和多台 Node 节点，搭建麻烦，安全性高，适合用于生产环境。")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs02k3y9anj30yy0e4abq.jpg",alt:"集群搭建类型.png"}})]),s._v(" "),t("blockquote",[t("p",[s._v("本文使用一主多从。")])]),s._v(" "),t("h3",{attrs:{id:"_1-2-安装方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-安装方式"}},[s._v("#")]),s._v(" 1.2 安装方式")]),s._v(" "),t("p",[s._v("Kubernetes 有多种部署方式，目前主流的方式有 Kubeadm、minikube、二进制包：")]),s._v(" "),t("ul",[t("li",[s._v("Kubeadm：一个用于快速搭建 kubernetes 集群的工具。")]),s._v(" "),t("li",[s._v("minikube：一个用于快速搭建单节点的 Kubernetes 工具。")]),s._v(" "),t("li",[s._v("二进制包：从官网上下载每个组件的二进制包，依次去安装，此方式对于理解 Kubernetes 组件更加有效。")])]),s._v(" "),t("h3",{attrs:{id:"_1-3-主机规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-主机规划"}},[s._v("#")]),s._v(" 1.3 主机规划")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("角色")]),s._v(" "),t("th",[s._v("IP地址")]),s._v(" "),t("th",[s._v("操作系统")]),s._v(" "),t("th",[s._v("配置")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Master")]),s._v(" "),t("td",[s._v("172.16.58.200")]),s._v(" "),t("td",[s._v("CentOS7.9，基础设施服务器")]),s._v(" "),t("td",[s._v("2核CPU，2G内存，50G硬盘")])]),s._v(" "),t("tr",[t("td",[s._v("Node1")]),s._v(" "),t("td",[s._v("172.16.58.201")]),s._v(" "),t("td",[s._v("CentOS7.9，基础设施服务器")]),s._v(" "),t("td",[s._v("2核CPU，2G内存，50G硬盘")])]),s._v(" "),t("tr",[t("td",[s._v("Node2")]),s._v(" "),t("td",[s._v("172.16.58.202")]),s._v(" "),t("td",[s._v("CentOS7.9，基础设施服务器")]),s._v(" "),t("td",[s._v("2核CPU，2G内存，50G硬盘")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("Mac 上如何配置虚拟机静态 IP 可以参考："),t("RouterLink",{attrs:{to:"/linux/skills/skill-setvmstaticip.html"}},[s._v("Mac 上 VMware 配置 CentOS 静态IP")])],1)]),s._v(" "),t("h2",{attrs:{id:"_2-环境规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-环境规划"}},[s._v("#")]),s._v(" 2. 环境规划")]),s._v(" "),t("h3",{attrs:{id:"_2-1-前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-前言"}},[s._v("#")]),s._v(" 2.1 前言")]),s._v(" "),t("ul",[t("li",[s._v("本次环境搭建需要三台CentOS服务器（一主二从），然后在每台服务器中分别安装Docker（18.06.3）、kubeadm（1.18.0）、kubectl（1.18.0）和kubelet（1.18.0）。")])]),s._v(" "),t("blockquote",[t("p",[s._v("没有特殊说明，就是三台机器都需要执行。")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-环境初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-环境初始化"}},[s._v("#")]),s._v(" 2.2 环境初始化")]),s._v(" "),t("h4",{attrs:{id:"_2-2-1-检查操作系统版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-检查操作系统版本"}},[s._v("#")]),s._v(" 2.2.1 检查操作系统版本")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("检查操作系统的版本（要求操作系统的版本至少在7.5以上）：")]),s._v(" "),t("div",{staticClass:"language-SH extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/redhat-release\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出")]),s._v("\nCentOS Linux release "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.9")]),s._v(".2009 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Core"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-2-关闭防火墙和禁止防火墙开机启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-关闭防火墙和禁止防火墙开机启动"}},[s._v("#")]),s._v(" 2.2.2 关闭防火墙和禁止防火墙开机启动")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("关闭防火墙")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ systemctl stop firewalld\n")])])])]),s._v(" "),t("li",[t("p",[s._v("禁止防火墙开机启动")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ systemctl disable firewalld\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出")]),s._v("\nRemoved symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.\nRemoved symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-3-设置主机名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-设置主机名"}},[s._v("#")]),s._v(" 2.2.3 设置主机名")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("hostnamectl set-hostname "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hostname"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("ul",[t("li",[t("p",[s._v("设置 172.16.58.200 主机名")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("hostnamectl set-hostname k8s-master\n")])])])]),s._v(" "),t("li",[t("p",[s._v("设置 172.16.58.201 主机名")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("hostnamectl set-hostname k8s-node1\n")])])])]),s._v(" "),t("li",[t("p",[s._v("设置 172.16.58.202 主机名")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("hostnamectl set-hostname k8s-node2\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-4-主机名解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-主机名解析"}},[s._v("#")]),s._v(" 2.2.4 主机名解析")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("为了方便后面集群节点间的直接调用，需要配置一下主机名解析，企业中推荐使用内部的DNS服务器。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/hosts "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n172.16.58.200 k8s-master\n172.16.58.201 k8s-node1\n172.16.58.202 k8s-node2\nEOF")]),s._v("\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-5-时间同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-时间同步"}},[s._v("#")]),s._v(" 2.2.5 时间同步")]),s._v(" "),t("p",[s._v("Kubernetes 要求集群中的节点时间必须精确一致，所以在每个节点上添加时间同步：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("安装网络时间同步器")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ntpdate -y\n")])])])]),s._v(" "),t("li",[t("p",[s._v("同步时间")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ntpdate time.windows.com\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-6-关闭-selinux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-关闭-selinux"}},[s._v("#")]),s._v(" 2.2.6 关闭 selinux")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("查看 selinux 是否开启")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ getenforce\nEnforcing\n")])])])]),s._v(" "),t("li",[t("p",[s._v("永久关闭 selinux，需要重启：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/enforcing/disabled/'")]),s._v(" /etc/selinux/config\n")])])])]),s._v(" "),t("li",[t("p",[s._v("临时关闭 selinux，重启之后无效：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("setenforce "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-7-关闭-swap-分区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-关闭-swap-分区"}},[s._v("#")]),s._v(" 2.2.7 关闭 swap 分区")]),s._v(" "),t("blockquote",[t("p",[s._v("swap 分区指的是虚拟内存分区，它的作用是在物理内存使用完之后，将磁盘空间虚拟成内存来使用。")]),s._v(" "),t("p",[s._v("启用 swap 设备会对系统的性能产生非常负面的影响，因此 Kubernetes 要求每 个节点都要禁用 swap 设备")]),s._v(" "),t("p",[s._v("但是如果因为某些原因确实不能关闭 swap 分区，就需要在集群安装过程中通过明确的参数进行配置说明。")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("永久关闭 swap 分区，需要重启：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -ri "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*swap.*/#&/'")]),s._v(" /etc/fstab\n")])])])]),s._v(" "),t("li",[t("p",[s._v("咱是关闭 swap 分区，重启之后无效：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("swapoff -a\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-8-将桥接的-ipv4-流量传递到-iptables-的链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-8-将桥接的-ipv4-流量传递到-iptables-的链"}},[s._v("#")]),s._v(" 2.2.8 将桥接的 IPv4 流量传递到 iptables 的链")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在每个节点上将桥接的IPv4流量传递到iptables的链：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/sysctl.d/k8s.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness = 0\nEOF")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("加载网桥过滤模块 "),t("code",[s._v("br_netfilter")]),s._v(" 模块：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("modprobe br_netfilter\n")])])])]),s._v(" "),t("li",[t("p",[s._v("查看网络过滤模块是否加载：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ lsmod "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" br_netfilter\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出")]),s._v("\nbr_netfilter           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22256")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这个就是网桥过滤模块")]),s._v("\nbridge                "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("151336")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" br_netfilter\n")])])])]),s._v(" "),t("li",[t("p",[s._v("生效：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ sysctl --system\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出")]),s._v("\n* Applying /usr/lib/sysctl.d/00-system.conf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n* Applying /etc/sysctl.conf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-9-开启-ipvs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-9-开启-ipvs"}},[s._v("#")]),s._v(" 2.2.9 开启 ipvs")]),s._v(" "),t("p",[s._v("在 Kubernetes 中 Service 有两种代理模型，一种是基于 "),t("code",[s._v("iptables")]),s._v("，另一种是基于 "),t("code",[s._v("ipvs")]),s._v(" 的。ipvs 的性能要高于 iptables 的，但是如果要使用它，需要手动载入ipvs模块。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在每个节点安装 "),t("code",[s._v("ipset")]),s._v(" 和 "),t("code",[s._v("ipvsadm")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ipset ipvsadm\n")])])])]),s._v(" "),t("li",[t("p",[s._v("在所有节点执行如下脚本：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/sysconfig/modules/ipvs.modules "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\nEOF")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("为脚本添加执行权限：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("755")]),s._v(" /etc/sysconfig/modules/ipvs.modules\n")])])])]),s._v(" "),t("li",[t("p",[s._v("执行脚本：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" /etc/sysconfig/modules/ipvs.modules\n")])])])]),s._v(" "),t("li",[t("p",[s._v("查看是否 "),t("code",[s._v("ipvs")]),s._v(" 载入成功：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ lsmod "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -e ip_vs -e nf_conntrack_ipv4\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出")]),s._v("\nip_vs_sh               "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12688")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \nip_vs_wrr              "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12697")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \nip_vs_rr               "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12600")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \nip_vs                 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("145458")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" ip_vs_rr,ip_vs_sh,ip_vs_wrr\nnf_conntrack_ipv4      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15053")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" \nnf_defrag_ipv4         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12729")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" nf_conntrack_ipv4\nnf_conntrack          "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("139264")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" ip_vs,nf_nat,nf_nat_ipv4,xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4\nlibcrc32c              "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12644")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" xfs,ip_vs,nf_nat,nf_conntrack\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-10-重启三台机器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-10-重启三台机器"}},[s._v("#")]),s._v(" 2.2.10 重启三台机器")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n")])])]),t("ul",[t("li",[t("p",[s._v("检查 selinux 是否关闭：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ getenforce\n")])])])]),s._v(" "),t("li",[t("p",[s._v("检查 swap 分区是否关闭：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" -m\n\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"_2-3-每个节点安装-docker、kubeadm、kubelet-和-kubectl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-每个节点安装-docker、kubeadm、kubelet-和-kubectl"}},[s._v("#")]),s._v(" 2.3 每个节点安装 Docker、kubeadm、kubelet 和 kubectl")]),s._v(" "),t("h4",{attrs:{id:"_2-3-1-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-安装-docker"}},[s._v("#")]),s._v(" 2.3.1 安装 Docker")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("安装 Docker：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("切换镜像源：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo\n")])])])]),s._v(" "),t("li",[t("p",[s._v("安装 Docker：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce-18.06.3.ce-3.el7\n")])])])]),s._v(" "),t("li",[t("p",[s._v("启动 Docker：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl start docker\n")])])])]),s._v(" "),t("li",[t("p",[s._v("设置 Docker 开机自启动：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" \n")])])])]),s._v(" "),t("li",[t("p",[s._v("检查 Docker 版本，确保安装成功：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker version\n")])])])])])]),s._v(" "),t("li",[t("p",[s._v("设置 Docker 镜像加速器：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("前往「"),t("a",{attrs:{href:"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors",target:"_blank",rel:"noopener noreferrer"}},[s._v("阿里云容器镜像服务"),t("OutboundLink")],1),s._v("」：")])]),s._v(" "),t("li",[t("p",[s._v("找到镜像加速器配置方式：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs2eqsan7uj31qc0gwtbh.jpg",alt:"image-20210702104310545"}})])]),s._v(" "),t("li",[t("p",[s._v("配置镜像加速器")])])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/docker\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<-")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n{\n  "registry-mirrors": ["https://upv8c0bn.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart docker\n")])])])]),s._v(" "),t("li",[t("p",[s._v("Docker 在默认情况下使用 "),t("code",[s._v("Cgroup Driver")]),s._v(" 为 "),t("code",[s._v("cgroupfs")]),s._v("，而 Kubernetes 推荐使用 "),t("code",[s._v("systemd")]),s._v(" 来替代 "),t("code",[s._v("cgroupfs")]),s._v("，所以我们需要再次修改上面的 "),t("code",[s._v("/etc/docker/daemon.json")]),s._v(" 文件，修改后内容为：")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exec-opts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"native.cgroupdriver=systemd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"registry-mirrors"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://upv8c0bn.mirror.aliyuncs.com"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-3-2-添加阿里云的-yum-软件源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-添加阿里云的-yum-软件源"}},[s._v("#")]),s._v(" 2.3.2 添加阿里云的 YUM 软件源")]),s._v(" "),t("p",[s._v("由于 Kubernetes 的镜像源在国外，非常慢，这里切换成国内的阿里云镜像源：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/yum.repos.d/kubernetes.repo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),s._v("\n")])])]),t("h4",{attrs:{id:"_2-3-3-安装-kubeadm、kubelet-和-kubectl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-安装-kubeadm、kubelet-和-kubectl"}},[s._v("#")]),s._v(" 2.3.3 安装 kubeadm、kubelet 和 kubectl")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("由于版本更新频繁，这里指定版本号部署：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0\n")])])])]),s._v(" "),t("li",[t("p",[s._v("为了实现 Docker 使用的 "),t("code",[s._v("cgroup drvier")]),s._v(" 和 "),t("code",[s._v("kubelet")]),s._v(" 使用的 "),t("code",[s._v("cgroup drver")]),s._v(" 一致，建议修改 "),t("code",[s._v('"/etc/sysconfig/kubelet"')]),s._v(" 文件的内容：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/sysconfig/kubelet\n")])])]),t("ul",[t("li",[t("p",[s._v("修改：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KUBELET_EXTRA_ARGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--cgroup-driver=systemd"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KUBE_PROXY_MODE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ipvs"')]),s._v("\n")])])])])])]),s._v(" "),t("li",[t("p",[s._v("设置为开机自启动即可，由于没有生成配置文件，集群初始化后自动启动：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" kubelet\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"_2-4-准备-k8s-集群所需镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-准备-k8s-集群所需镜像"}},[s._v("#")]),s._v(" 2.4 准备 k8s 集群所需镜像")]),s._v(" "),t("p",[s._v("查看集群所需镜像：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("kubeadm config images list\n")])])]),t("p",[s._v("输出：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("k8s.gcr.io/kube-apiserver:v1.18.20\nk8s.gcr.io/kube-controller-manager:v1.18.20\nk8s.gcr.io/kube-scheduler:v1.18.20\nk8s.gcr.io/kube-proxy:v1.18.20\nk8s.gcr.io/pause:3.2\nk8s.gcr.io/etcd:3.4.3-0\nk8s.gcr.io/coredns:1.6.7\n")])])]),t("p",[s._v("由于后面在初始化 k8s 集群的时候需要运行 "),t("code",[s._v("kubeadm init")]),s._v("，它会从 k8s 官方拉取上述镜像，由于国内网络原因很困难导致拉取失败，所以这里我们先从阿里云提前拉取镜像：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("images")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tkube-apiserver:v1.18.20\n  kube-controller-manager:v1.18.20\n  kube-scheduler:v1.18.20\n  kube-proxy:v1.18.20\n  pause:3.2\n  etcd:3.4.3-0\n  coredns:1.6.7\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("imageName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${images"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n\tdocker pull registry.cn-hangzhou.aliyuncs.com/google_containers/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v("\n\tdocker tag registry.cn-hangzhou.aliyuncs.com/google_containers/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v(" k8s.gcr.io/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v("\n\tdocker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("查看镜像：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker images\n")])])]),t("p",[s._v("输出：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images")]),s._v("\nREPOSITORY                           TAG                 IMAGE ID            CREATED             SIZE\nk8s.gcr.io/kube-proxy                v1.18.20            27f8b8d51985        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weeks ago         117MB\nk8s.gcr.io/kube-apiserver            v1.18.20            7d8d2960de69        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weeks ago         173MB\nk8s.gcr.io/kube-scheduler            v1.18.20            a05a1a79adaa        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weeks ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("96")]),s._v(".1MB\nk8s.gcr.io/kube-controller-manager   v1.18.20            e7c545a60706        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weeks ago         162MB\nk8s.gcr.io/pause                     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.2")]),s._v("                 80d28bedfe5d        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" months ago       683kB\nk8s.gcr.io/coredns                   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.6")]),s._v(".7               67da37a9a360        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" months ago       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("43")]),s._v(".8MB\nk8s.gcr.io/etcd                      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.4")]),s._v(".3-0             303ce5db0e90        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" months ago       288MB\n")])])]),t("h2",{attrs:{id:"_3-初始化集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-初始化集群"}},[s._v("#")]),s._v(" 3. 初始化集群")]),s._v(" "),t("blockquote",[t("p",[s._v("集群初始化的时候只需在 "),t("code",[s._v("Master")]),s._v(" 节点上进行初始化，然后再将 "),t("code",[s._v("Node")]),s._v(" 节点加入到 Master 节点即可。")])]),s._v(" "),t("h3",{attrs:{id:"_3-1-初始化-master-节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-初始化-master-节点"}},[s._v("#")]),s._v(" 3.1 初始化 Master 节点")]),s._v(" "),t("blockquote",[t("p",[s._v("只在 Master节点（172.16.58.200）上执行。")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("创建集群：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubeadm init \\")]),s._v("\n  --kubernetes-version v1.18.20 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --service-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.0/12 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --pod-network-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --apiserver-advertise-address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".58.200\n")])])]),t("ul",[t("li",[s._v("kubernetes-version：k8s 版本，注意要跟前面安装的镜像对齐")]),s._v(" "),t("li",[s._v("pod-network-cidr：Pod 节点网络，跟我保持一致即可")]),s._v(" "),t("li",[s._v("service-cidr：Service 网络，跟我保持一致即可")]),s._v(" "),t("li",[s._v("apiserver-advertise-address：改成 "),t("code",[s._v("Master 节点的 IP 地址")])])])]),s._v(" "),t("li",[t("p",[s._v("上述执行后输出：")]),s._v(" "),t("div",{staticClass:"language-markdown extra-class"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[t("span",{pre:!0,attrs:{class:"token title important"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("#")]),s._v(" 安装成功")]),s._v("\nYour Kubernetes control-plane has initialized successfully!\n\n"),t("span",{pre:!0,attrs:{class:"token title important"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("#")]),s._v(" 后续需要创建的文件")]),s._v("\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n"),t("span",{pre:!0,attrs:{class:"token title important"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("#")]),s._v(" 部署网络需要执行的操作")]),s._v('\nYou should now deploy a pod network to the cluster.\nRun "kubectl apply -f [podnetwork].yaml" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\n'),t("span",{pre:!0,attrs:{class:"token title important"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("#")]),s._v(" Node 节点要加入的时候需要执行的东西")]),s._v("\nThen you can join any number of worker nodes by running the following on each as root:\nkubeadm join 172.16.58.200:6443 --token ew64tz.d4ju2wovg684bz6u \\\n    --discovery-token-ca-cert-hash sha256:e4959de30bb94df662147bdf32044d5278eecd7c77f2e56b51ae07860a52fd79 \n")])])])]),s._v(" "),t("li",[t("p",[s._v("根据提示创建必要文件：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -i /etc/kubernetes/admin.conf "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -g"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"_3-2-node-加入到-master-节点中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-node-加入到-master-节点中"}},[s._v("#")]),s._v(" 3.2 Node 加入到 Master 节点中")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Node1 加入：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-node1 ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubeadm join 172.16.58.200:6443 --token ew64tz.d4ju2wovg684bz6u \\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     --discovery-token-ca-cert-hash sha256:e4959de30bb94df662147bdf32044d5278eecd7c77f2e56b51ae07860a52fd79 \nW0701 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(":33:10.083754    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9549")]),s._v(" join.go:346"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("preflight"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("preflight"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Running pre-flight checks\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("preflight"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Reading configuration from the cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("preflight"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" FYI: You can "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("look")]),s._v(" at this config "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" with "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'kubectl -n kube-system get cm kubeadm-config -oyaml'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kubelet-start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Downloading configuration "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the kubelet from the "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubelet-config-1.18"')]),s._v(" ConfigMap "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the kube-system namespace\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kubelet-start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Writing kubelet configuration to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/lib/kubelet/config.yaml"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kubelet-start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Writing kubelet environment "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" with flags to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/lib/kubelet/kubeadm-flags.env"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kubelet-start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Starting the kubelet\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kubelet-start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Waiting "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the kubelet to perform the TLS Bootstrap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 成功加入")]),s._v("\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 Master 节点可以执行该命名查看 Node 是否已经加入集群")]),s._v("\nRun "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'kubectl get nodes'")]),s._v(" on the control-plane to see this node "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" the cluster.\n")])])])]),s._v(" "),t("li",[t("p",[s._v("Node2 加入：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("kubeadm join 172.16.58.200:6443 --token ew64tz.d4ju2wovg684bz6u \\\n    --discovery-token-ca-cert-hash sha256:e4959de30bb94df662147bdf32044d5278eecd7c77f2e56b51ae07860a52fd79 \n")])])])]),s._v(" "),t("li",[t("p",[s._v("Master 检查 Node 加入情况：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get nodes")]),s._v("\nNAME         STATUS     ROLES    AGE     VERSION\nk8s-master   NotReady   master   5m27s   v1.18.0\nk8s-node1    NotReady   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   95s     v1.18.0\nk8s-node2    NotReady   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   7s      v1.18.0\n")])])]),t("p",[s._v("可以看到 "),t("code",[s._v("Node1")]),s._v(" 和 "),t("code",[s._v("Node2")]),s._v(" 都已经加入到集群当中了，但是 "),t("code",[s._v("Status")]),s._v(" 还是 "),t("code",[s._v("NotReady")]),s._v(" 的状况，各个节点之前还无法互相通信，这是因为"),t("strong",[s._v("我们还没安装 CNI 网络插件")]),s._v("。")])])]),s._v(" "),t("h3",{attrs:{id:"_3-3-node-永久加入到-master-节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-node-永久加入到-master-节点"}},[s._v("#")]),s._v(" 3.3 Node 永久加入到 Master 节点")]),s._v(" "),t("p",[s._v("上述 Node 加入到 Master 节点的 "),t("code",[s._v("token")]),s._v(" 有效期只有 24 小时，当过期之后，"),t("code",[s._v("token")]),s._v(" 就不能用了，我们可以通过以下方式创建一个新的 "),t("code",[s._v("token")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("kubeadm token create --print-join-command\n")])])]),t("p",[s._v("也可以创建"),t("strong",[s._v("永久 token")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("kubeadm token create --ttl "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --print-join-command\n")])])]),t("p",[s._v("等刚刚使用的 token 过期后，再在 "),t("code",[s._v("Node")]),s._v(" 节点执行输出的内容就可以永久加入到 "),t("code",[s._v("Master")]),s._v(" 节点了。")]),s._v(" "),t("h2",{attrs:{id:"_4-安装-cni-网络插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-安装-cni-网络插件"}},[s._v("#")]),s._v(" 4. 安装 CNI 网络插件")]),s._v(" "),t("p",[s._v("Kubernetes 支持多种网络插件，比如 "),t("code",[s._v("flannel")]),s._v("、"),t("code",[s._v("calico")]),s._v("、"),t("code",[s._v("canal")]),s._v(" 等，任选一种即可，本次选择 "),t("code",[s._v("flannel")]),s._v("。")]),s._v(" "),t("blockquote",[t("p",[s._v("下面操作只需要在 "),t("code",[s._v("Master")]),s._v(" 节点执行即可，插件使用的是 "),t("code",[s._v("DaemonSet")]),s._v(" 的控制器，它会在每个节点上运行。")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("获取 "),t("code",[s._v("fannel")]),s._v(" 配置文件")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用配置文件启动 "),t("code",[s._v("flannel")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f kube-flannel.yml ")]),s._v("\npodsecuritypolicy.policy/psp.flannel.unprivileged created\nclusterrole.rbac.authorization.k8s.io/flannel created\nclusterrolebinding.rbac.authorization.k8s.io/flannel created\nserviceaccount/flannel created\nconfigmap/kube-flannel-cfg created\ndaemonset.apps/kube-flannel-ds created\n")])])])]),s._v(" "),t("li",[t("p",[s._v("稍等片刻，再次查看集群节点状态")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get nodes")]),s._v("\nNAME         STATUS   ROLES    AGE   VERSION\nk8s-master   Ready    master   18m   v1.18.0\nk8s-node1    Ready    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   15m   v1.18.0\nk8s-node2    Ready    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   13m   v1.18.0\n")])])])]),s._v(" "),t("li",[t("p",[s._v("查看集群监控状况：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get cs")]),s._v("\nNAME                 STATUS    MESSAGE             ERROR\ncontroller-manager   Healthy   ok                  \nscheduler            Healthy   ok                  \netcd-0               Healthy   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"health"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("查看集群信息")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl cluster-info")]),s._v("\nKubernetes master is running at https://172.16.58.200:6443\nKubeDNS is running at https://172.16.58.200:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'kubectl cluster-info dump'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])])])]),s._v(" "),t("h2",{attrs:{id:"_5-服务部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-服务部署"}},[s._v("#")]),s._v(" 5. 服务部署")]),s._v(" "),t("h3",{attrs:{id:"_5-1-前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-前言"}},[s._v("#")]),s._v(" 5.1 前言")]),s._v(" "),t("p",[s._v("前面我们已经完成了 "),t("strong",[s._v("一主二从")]),s._v(" 的 k8s 集群搭建了，下面我们来在 k8s 集群中部署一个 "),t("strong",[s._v("Nginx 程序")]),s._v("，测试我们的集群是否能正常工作。")]),s._v(" "),t("h3",{attrs:{id:"_5-2-步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-步骤"}},[s._v("#")]),s._v(" 5.2 步骤")]),s._v(" "),t("blockquote",[t("p",[s._v("以下操作都只需要在 "),t("code",[s._v("Master")]),s._v(" 节点操作。")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("部署 Nginx")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl create deployment nginx --image=nginx:1.14-alpine")]),s._v("\ndeployment.apps/nginx created\n")])])])]),s._v(" "),t("li",[t("p",[s._v("暴露端口")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl expose deployment nginx --port=80 --type=NodePort")]),s._v("\nservice/nginx exposed\n")])])]),t("p",[s._v("port：暴露的端口号")]),s._v(" "),t("p",[s._v("type：NodePort 表示允许集群以外的浏览器访问")])]),s._v(" "),t("li",[t("p",[s._v("查看服务状态")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods")]),s._v("\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-55f8fd7cfc-g78sc   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          96s\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get svc")]),s._v("\nNAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("S"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        AGE\nkubernetes   ClusterIP   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.1     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v("/TCP        24m\nnginx        NodePort    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".57.51   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":30399/TCP   70s\n")])])]),t("p",[s._v("上述可以看到暴露给外界的端口号是："),t("code",[s._v("30399")]),s._v("，所以我们可以通过集群内的 "),t("code",[s._v("节点IP:30399")]),s._v(" 来访问 Nginx。")])]),s._v(" "),t("li",[t("p",[s._v("在宿主机访问部署的 Nginx 服务")]),s._v(" "),t("p",[s._v("Master：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs2gvpw1zij31q00g4n0s.jpg",alt:"image-20210702115709209"}})]),s._v(" "),t("p",[s._v("Node1：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs2gw3fksej31xy0fwjv9.jpg",alt:"image-20210702115730609"}})]),s._v(" "),t("p",[s._v("Node2：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hedonspace.oss-cn-beijing.aliyuncs.com/img2/008i3skNly1gs2gweoscrj31oy0fw423.jpg",alt:"image-20210702115748511"}})])])]),s._v(" "),t("p",[s._v("🥳🥳🥳 至此，我们就把 Kubernetes 的集群给成功搭建起来啦！")]),s._v(" "),t("p",[s._v("🥳🥳🥳 "),t("strong",[s._v("Congratulations!!!!!")])])])}),[],!1,null,null,null);a.default=n.exports}}]);